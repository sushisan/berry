<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="berry_8h" kind="file" language="C++">
    <compoundname>berry.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="yes">berry_conf.h</includes>
    <incdepgraph>
      <node id="4">
        <label>berry_conf.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="2">
        <label>stddef.h</label>
      </node>
      <node id="1">
        <label>/home/var/tmp/BERRY/berry/src/berry.h</label>
        <link refid="berry_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structbnfuncinfo" prot="public">bnfuncinfo</innerclass>
    <innerclass refid="structbntvmodobj" prot="public">bntvmodobj</innerclass>
    <innerclass refid="unionbntvmodobj_1_1value" prot="public">bntvmodobj::value</innerclass>
    <innerclass refid="structbntvmodule" prot="public">bntvmodule</innerclass>
    <innerclass refid="structbhookinfo" prot="public">bhookinfo</innerclass>
      <sectiondef kind="user-defined">
      <header>boolean values definition.</header>
      <memberdef kind="define" id="berry_8h_1a483536941d791ea930e4ec204c87a4f6" prot="public" static="no">
        <name>bbool</name>
        <initializer>_Bool</initializer>
        <briefdescription>
<para>boolean values definition. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="74" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1af7db536709087a3e3636528cdde94f50" prot="public" static="no">
        <name>bfalse</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="75" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1a25f214c07bdabddd7586c54cbdaff122" prot="public" static="no">
        <name>btrue</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="76" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>native-module member type specifier.</header>
      <memberdef kind="define" id="berry_8h_1a2c2a2b1c23ed45cd016ba7dfcad7fe05" prot="public" static="no">
        <name>BE_CNIL</name>
        <initializer>0</initializer>
        <briefdescription>
<para>native-module member type specifier. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="108" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1a36a50ac6471f1bb78ba405d359236a62" prot="public" static="no">
        <name>BE_CINT</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="109" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1a7bac88e1cb274455f59d06f549fe4456" prot="public" static="no">
        <name>BE_CREAL</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="110" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1a35603a603e1f31e4ba577aa75d728653" prot="public" static="no">
        <name>BE_CBOOL</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="111" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1a72b935432884ab4f8efa0e5f8a0b21c4" prot="public" static="no">
        <name>BE_CFUNCTION</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="112" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1ae7bf703630edcadbaef8f7a24f49d3c5" prot="public" static="no">
        <name>BE_CSTRING</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="113" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1af83760278fe3c7346681343549631da0" prot="public" static="no">
        <name>BE_CMODULE</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="114" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>only linux.</header>
      <memberdef kind="define" id="berry_8h_1ad582cbe4aa73dcfbefcb8270e06cc5df" prot="public" static="no">
        <name>BERRY_LOCAL</name>
        <briefdescription>
<para>only linux </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="147" column="11" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1a78d824d984dceefda2e1c955ab531f8e" prot="public" static="no">
        <name>BE_EXPORT_VARIABLE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="161" column="10" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>BE_IIF</header>
      <memberdef kind="define" id="berry_8h_1a3b35bc6e8b8bb678f4fc0c9db26aa395" prot="public" static="no">
        <name>BE_IIF</name>
        <param><defname>cond</defname></param>
        <initializer>BE_IIF_ ## cond</initializer>
        <briefdescription>
<para>conditional macro see <ulink url="https://stackoverflow.com/questions/11632219/c-preprocessor-macro-specialisation-based-on-an-argument">https://stackoverflow.com/questions/11632219/c-preprocessor-macro-specialisation-based-on-an-argument</ulink> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="407" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="407" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1abbd521917ac37982ff122d21de2911b3" prot="public" static="no">
        <name>BE_IIF_0</name>
        <param><defname>t</defname></param>
        <param><defname>f</defname></param>
        <initializer>f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="408" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1af8d62ce709523e923b0b80abf327fa03" prot="public" static="no">
        <name>BE_IIF_1</name>
        <param><defname>t</defname></param>
        <param><defname>f</defname></param>
        <initializer>t</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="409" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="409" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>debug hook typedefs.</header>
      <memberdef kind="define" id="berry_8h_1abcdc5d88126ee8af359442e9d9dfb263" prot="public" static="no">
        <name>BE_HOOK_LINE</name>
        <initializer>1</initializer>
        <briefdescription>
<para>debug hook typedefs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="546" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="546" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1a5b02dbe5581e544f060fa058c14476b2" prot="public" static="no">
        <name>BE_HOOK_CALL</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="547" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="547" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1a7a79fc3f6dd70b8027f7f95c67640b3b" prot="public" static="no">
        <name>BE_HOOK_RET</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="548" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="548" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1ad53dc3971194e69ff968f6beaede6e48" prot="public" static="no">
        <name>BE_HOOK_EXCEPT</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="549" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="549" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="berry_8h_1aafa41a3004f1759ee3f1bacb8751bdcd" prot="public" static="no">
        <name>BERRY_VERSION</name>
        <initializer>&quot;1.1.0&quot;</initializer>
        <briefdescription>
<para>do not modify the version number! </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="26" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1ab29732ef463a3b441ad6df0b716c6c2c" prot="public" static="no">
        <name>BE_INTEGER</name>
        <initializer>int</initializer>
        <briefdescription>
<para>basic type definition </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="38" column="11" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1ae303e7824ab2c1fa8e3ceeadefa7d5a1" prot="public" static="no">
        <name>BE_INT_FMTLEN</name>
        <initializer>&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="39" column="11" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1af6797d5be40642b3f6f2b8e9792e0e57" prot="public" static="no">
        <name>BE_INT_FORMAT</name>
        <initializer>&quot;%&quot; BE_INT_FMTLEN &quot;d&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="54" column="10" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" prot="public" static="no">
        <name>BERRY_API</name>
        <initializer>extern</initializer>
        <briefdescription>
<para>API function mark. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="132" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1a7e51d20501a574f947fbb29566128672" prot="public" static="no">
        <name>be_native_module_nil</name>
        <param><defname>_name</defname></param>
        <initializer>    { .name = (_name), .type = <ref refid="berry_8h_1a2c2a2b1c23ed45cd016ba7dfcad7fe05" kindref="member">BE_CNIL</ref>, .u.i = 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="269" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1a7c4a6437440044936a723fb8a0f5f624" prot="public" static="no">
        <name>be_native_module_int</name>
        <param><defname>_name</defname></param>
        <param><defname>_v</defname></param>
        <initializer>    { .name = (_name), .type = BE_CINT, .u.i = (bint)(_v) }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="272" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1a85140083feae9ec40bf4fe56832d19e5" prot="public" static="no">
        <name>be_native_module_real</name>
        <param><defname>_name</defname></param>
        <param><defname>_v</defname></param>
        <initializer>    { .name = (_name), .type = BE_CREAL, .u.r = (breal)(_v) }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="275" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1acce1e24d35ec0cff8d35ba0df78274e2" prot="public" static="no">
        <name>be_native_module_bool</name>
        <param><defname>_name</defname></param>
        <param><defname>_b</defname></param>
        <initializer>    { .name = (_name), .type = BE_CBOOL, .u.b = (<ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref>)(_b) }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="278" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1ac387dc373aa11e347eb22a65dead340e" prot="public" static="no">
        <name>be_native_module_function</name>
        <param><defname>_name</defname></param>
        <param><defname>_f</defname></param>
        <initializer>    { .name = (_name), .type = BE_CFUNCTION, .u.f = (_f) }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="281" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1a33eacfb28374fefbb529762f71ca37f3" prot="public" static="no">
        <name>be_native_module_str</name>
        <param><defname>_name</defname></param>
        <param><defname>_s</defname></param>
        <initializer>    { .name = (_name), .type = BE_CSTRING, .u.s = (_s) }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="284" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1a21ba1d7944468bb047a694fd6a73851c" prot="public" static="no">
        <name>be_native_module_module</name>
        <param><defname>_name</defname></param>
        <param><defname>_m</defname></param>
        <initializer>    { .name = (_name), .type = BE_CMODULE, .u.o = &amp;(_m) }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="287" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1a9d741942f9458291cc88f9654c1ac532" prot="public" static="no">
        <name>be_native_module_attr_table</name>
        <param><defname>name</defname></param>
        <initializer>    static const <ref refid="structbntvmodobj" kindref="compound">bntvmodobj</ref> name##_attrs[] =</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="312" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="312" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1a3b6dd9529a78d4b17e1ba1214d8db8ec" prot="public" static="no">
        <name>be_native_module</name>
        <param><defname>name</defname></param>
        <initializer>be_native_module_##name</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="315" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1a58b5263e1f5821e54ce933c977667eef" prot="public" static="no">
        <name>be_native_class</name>
        <param><defname>name</defname></param>
        <initializer>be_class_##name</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="316" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="316" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1ad1bb75fa2986b83af90cfcfb7c2d9cf8" prot="public" static="no">
        <name>be_extern_native_module</name>
        <param><defname>name</defname></param>
        <initializer>    extern const <ref refid="structbntvmodule" kindref="compound">bntvmodule</ref> be_native_module(name)</initializer>
        <briefdescription>
<para>native module declaration macro </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="323" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="323" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1a6566dc7069e29dd0f05ce4714cd56011" prot="public" static="no">
        <name>be_extern_native_class</name>
        <param><defname>name</defname></param>
        <initializer>    extern const struct <ref refid="structbclass" kindref="compound">bclass</ref> be_native_class(name)</initializer>
        <briefdescription>
<para>native class declaration macro </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="331" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="331" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1a888ec2f60f0c9fe870171051468e7168" prot="public" static="no">
        <name>be_define_native_module</name>
        <param><defname>_name</defname></param>
        <param><defname>_init</defname></param>
        <initializer>    const <ref refid="structbntvmodule" kindref="compound">bntvmodule</ref> be_native_module(_name) = {        \
        .name = #_name,                                 \
        .attrs = _name##_attrs,                         \
        .size = sizeof(_name##_attrs)                   \
               / sizeof(_name##_attrs[0]),              \
        .module = NULL,                                 \
        .init = _init                                   \
    }</initializer>
        <briefdescription>
<para>native module definition macro </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="340" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="340" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1a5f5b03e3ed794580f1348be57532e8ca" prot="public" static="no">
        <name>be_define_local_const_str</name>
        <param><defname>_name</defname></param>
        <param><defname>_s</defname></param>
        <param><defname>_hash</defname></param>
        <param><defname>_len</defname></param>
        <initializer>    static const bcstring be_local_const_str_##_name = {  \
        .next = (bgcobject *)NULL,                        \
        .type = BE_STRING,                                \
        .marked = GC_CONST,                               \
        .extra = 0,                                       \
        .slen = _len,                                     \
        .hash = 0,                                        \
        .s = _s                                           \
    }</initializer>
        <briefdescription>
<para>support for solidified berry functions native const strings outside of global string hash </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="365" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="365" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1a5e05d016e1279f1da065a34874778702" prot="public" static="no">
        <name>be_nested_const_str</name>
        <param><defname>_s</defname></param>
        <param><defname>_hash</defname></param>
        <param><defname>_len</defname></param>
        <initializer>    (bstring*) &amp;(const bcstring) {            \
        .next = (bgcobject *)NULL,            \
        .type = BE_STRING,                    \
        .marked = GC_CONST,                   \
        .extra = 0,                           \
        .slen = _len,                         \
        .hash = 0,                            \
        .s = _s                               \
    }</initializer>
        <briefdescription>
<para>new version for more compact literals </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="381" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="381" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1a7dcabc39ca2b927ea224ded9b34e0385" prot="public" static="no">
        <name>be_local_const_str</name>
        <param><defname>_name</defname></param>
        <initializer>(bstring*) &amp;be_local_const_str_##_name</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="397" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="397" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1a4be8d6593e6edb60a534b736e608f683" prot="public" static="no">
        <name>be_local_const_upval</name>
        <param><defname>ins</defname></param>
        <param><defname>idx</defname></param>
        <initializer>{ ins, idx }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="422" column="12" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="422" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1ae73754cb5fe9ed54fbcffec3d147a771" prot="public" static="no">
        <name>PROTO_RUNTIME_BLOCK</name>
        <briefdescription>
<para>conditional block in bproto depending on compilation options </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="435" column="12" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="435" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1acc32a1759e1c89e3e80ba8bdaa5de528" prot="public" static="no">
        <name>PROTO_VAR_INFO_BLOCK</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="448" column="12" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="448" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1a03d302fb234f4109c60e6141ea7bbca6" prot="public" static="no">
        <name>be_define_local_proto</name>
        <param><defname>_name</defname></param>
        <param><defname>_nstack</defname></param>
        <param><defname>_argc</defname></param>
        <param><defname>_is_const</defname></param>
        <param><defname>_is_subproto</defname></param>
        <param><defname>_is_upval</defname></param>
        <initializer>  static const bproto _name##_proto = {                                           \
    NULL,                                                             /**&lt; bgcobject *next */      \
    BE_PROTO,                                                         /**&lt; type BE_PROTO */        \
    0x08,                                                             /**&lt; marked outside of GC */ \
    (_nstack),                                                        /**&lt; nstack */               \
    <ref refid="berry_8h_1a3b35bc6e8b8bb678f4fc0c9db26aa395" kindref="member">BE_IIF</ref>(_is_upval)(sizeof(_name##_upvals)/sizeof(bupvaldesc),0),   /**&lt; nupvals */              \
    (_argc),                                                          /**&lt; argc */                 \
    0,                                                                /**&lt; varg */                 \
    NULL,                                                             /**&lt; bgcobject *gray */      \
    <ref refid="berry_8h_1a3b35bc6e8b8bb678f4fc0c9db26aa395" kindref="member">BE_IIF</ref>(_is_upval)((bupvaldesc*)&amp;_name##_upvals,NULL),             /**&lt; bupvaldesc *upvals */   \
    <ref refid="berry_8h_1a3b35bc6e8b8bb678f4fc0c9db26aa395" kindref="member">BE_IIF</ref>(_is_const)((bvalue*)&amp;_name##_ktab,NULL),                   /**&lt; ktab */                 \
    <ref refid="berry_8h_1a3b35bc6e8b8bb678f4fc0c9db26aa395" kindref="member">BE_IIF</ref>(_is_subproto)((struct bproto**)&amp;_name##_subproto,NULL),    /**&lt; bproto **ptab */        \
    (binstruction*) &amp;_name##_code,                                    /**&lt; code */                 \
    be_local_const_str(_name##_str_name),                             /**&lt; name */                 \
    sizeof(_name##_code)/sizeof(uint32_t),                            /**&lt; codesize */             \
    <ref refid="berry_8h_1a3b35bc6e8b8bb678f4fc0c9db26aa395" kindref="member">BE_IIF</ref>(_is_const)(sizeof(_name##_ktab)/sizeof(bvalue),0),         /**&lt; nconst */               \
    <ref refid="berry_8h_1a3b35bc6e8b8bb678f4fc0c9db26aa395" kindref="member">BE_IIF</ref>(_is_subproto)(sizeof(_name##_subproto)/sizeof(bproto*),0), /**&lt; proto */                \
    be_local_const_str(_name##_str_source),                           /**&lt; source */               \
    <ref refid="berry_8h_1ae73754cb5fe9ed54fbcffec3d147a771" kindref="member">PROTO_RUNTIME_BLOCK</ref>                                               /**&lt; */                      \
    PROTO_VAR_INFO_BLOCK                                              /**&lt; */                      \
  }</initializer>
        <briefdescription>
<para>define bproto </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="456" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="456" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1ab03317a9514b52ba420f7ee5871982fc" prot="public" static="no">
        <name>be_nested_proto</name>
        <param><defname>_nstack</defname></param>
        <param><defname>_argc</defname></param>
        <param><defname>_varg</defname></param>
        <param><defname>_has_upval</defname></param>
        <param><defname>_upvals</defname></param>
        <param><defname>_has_subproto</defname></param>
        <param><defname>_protos</defname></param>
        <param><defname>_has_const</defname></param>
        <param><defname>_ktab</defname></param>
        <param><defname>_fname</defname></param>
        <param><defname>_source</defname></param>
        <param><defname>_code</defname></param>
        <initializer>  &amp; (const bproto) {                                                              \
    NULL,                                                       /**&lt; bgcobject *next */      \
    BE_PROTO,                                                   /**&lt; type BE_PROTO */        \
    0x08,                                                       /**&lt; marked outside of GC */ \
    (_nstack),                                                  /**&lt; nstack */               \
    <ref refid="berry_8h_1a3b35bc6e8b8bb678f4fc0c9db26aa395" kindref="member">BE_IIF</ref>(_has_upval)(sizeof(*_upvals)/sizeof(bupvaldesc),0),  /**&lt; nupvals */              \
    (_argc),                                                    /**&lt; argc */                 \
    (_varg),                                                    /**&lt; varg */                 \
    NULL,                                                       /**&lt; bgcobject *gray */      \
    (bupvaldesc*) _upvals,                                      /**&lt; bupvaldesc *upvals */   \
    (bvalue*) _ktab,                                            /**&lt; ktab */                 \
    (struct bproto**) _protos,                                  /**&lt; bproto **ptab */        \
    (binstruction*) _code,                                      /**&lt; code */                 \
    ((bstring*) _fname),                                        /**&lt; name */                 \
    sizeof(*_code)/sizeof(binstruction),                        /**&lt; codesize */             \
    <ref refid="berry_8h_1a3b35bc6e8b8bb678f4fc0c9db26aa395" kindref="member">BE_IIF</ref>(_has_const)(sizeof(*_ktab)/sizeof(bvalue),0),        /**&lt; nconst */               \
    <ref refid="berry_8h_1a3b35bc6e8b8bb678f4fc0c9db26aa395" kindref="member">BE_IIF</ref>(_has_subproto)(sizeof(*_protos)/sizeof(bproto*),0),  /**&lt; proto */                \
    ((bstring*) _source),                                       /**&lt; source */               \
    <ref refid="berry_8h_1ae73754cb5fe9ed54fbcffec3d147a771" kindref="member">PROTO_RUNTIME_BLOCK</ref>                                         /**&lt; */                      \
    PROTO_VAR_INFO_BLOCK                                        /**&lt; */                      \
  }</initializer>
        <briefdescription>
<para>new version for more compact literals </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="484" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="484" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1a1e7400750c1e3fa5d1e0a4e88e9d41f2" prot="public" static="no">
        <name>be_define_local_closure</name>
        <param><defname>_name</defname></param>
        <initializer>  const bclosure _name##_closure = {                  \
    NULL,                     /**&lt; bgcobject *next */ \
    BE_CLOSURE,               /**&lt; type BE_CLOSURE */ \
    GC_CONST,                 /**&lt; marked GC_CONST */ \
    0,                        /**&lt; nupvals */         \
    NULL,                     /**&lt; bgcobject *gray */ \
    (bproto*) &amp;_name##_proto, /**&lt; proto */           \
    { NULL }                  /**&lt; upvals */          \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="512" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="512" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1a3c061920384b37d5c59a85674a6b8a0e" prot="public" static="no">
        <name>be_local_closure</name>
        <param><defname>_name</defname></param>
        <param><defname>_proto</defname></param>
        <initializer>  static const bclosure _name##_closure = {   \
    NULL,             /**&lt; bgcobject *next */ \
    BE_CLOSURE,       /**&lt; type BE_CLOSURE */ \
    GC_CONST,         /**&lt; marked GC_CONST */ \
    0,                /**&lt; nupvals */         \
    NULL,             /**&lt; bgcobject *gray */ \
    (bproto*) _proto, /**&lt; proto */           \
    { NULL }          /**&lt; upvals */          \
  }</initializer>
        <briefdescription>
<para>new version for more compact literals </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="528" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="528" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1aa8f37fe0b3f4007507cba855543becda" prot="public" static="no">
        <name>be_assert</name>
        <param><defname>expr</defname></param>
        <initializer>((void)0)</initializer>
        <briefdescription>
<para>the default assert definition </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="585" column="10" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="585" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1aad94e7ed246851a8e37d780062967d23" prot="public" static="no">
        <name>be_writestring</name>
        <param><defname>s</defname></param>
        <initializer><ref refid="berry_8h_1ae0e72ac28fef5610f98fa67fbb03b645" kindref="member">be_writebuffer</ref>((s), strlen(s))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="626" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="626" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1af0671b49053b387f81618311cd8c1642" prot="public" static="no">
        <name>be_writenewline</name>
        <param></param>
        <initializer><ref refid="berry_8h_1ae0e72ac28fef5610f98fa67fbb03b645" kindref="member">be_writebuffer</ref>(&quot;\n&quot;, 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="634" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="634" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1a2bfb4e4119f60c4814e4b6009d475285" prot="public" static="no">
        <name>be_return</name>
        <param><defname>vm</defname></param>
        <initializer>return <ref refid="berry_8h_1a657069bddbc8eba1faec45adf933b6a8" kindref="member">be_returnvalue</ref>(vm)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance virtual machine instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="643" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="643" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1afc724329ef4805a66e5fab8382f80fba" prot="public" static="no">
        <name>be_return_nil</name>
        <param><defname>vm</defname></param>
        <initializer>return <ref refid="berry_8h_1a441cd6a5ce904d027345d61fa593cf36" kindref="member">be_returnnilvalue</ref>(vm)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance virtual machine instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="652" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="652" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1a8a9882d99eefd2ec5f4b3ea2156ecc9a" prot="public" static="no">
        <name>be_loadfile</name>
        <param><defname>vm</defname></param>
        <param><defname>name</defname></param>
        <initializer>be_loadmode((vm), (name), 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>(???) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="662" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="662" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1a18e32c800312285ff59d34aa7ad9be28" prot="public" static="no">
        <name>be_loadmodule</name>
        <param><defname>vm</defname></param>
        <param><defname>name</defname></param>
        <initializer>be_loadmode((vm), (name), 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="673" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="673" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1a4bdadd5fffe12ffca2e3c4add2a80859" prot="public" static="no">
        <name>be_loadstring</name>
        <param><defname>vm</defname></param>
        <param><defname>str</defname></param>
        <initializer>    <ref refid="berry_8h_1a2778739fa0b08bc81e566772fe5ad78f" kindref="member">be_loadbuffer</ref>((vm), &quot;string&quot;, (str), strlen(str))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>(???) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="684" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="684" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="berry_8h_1afb8f309ea0341f059acfefdedadcadb8" prot="public" static="no">
        <name>be_dostring</name>
        <param><defname>vm</defname></param>
        <param><defname>s</defname></param>
        <initializer>    (<ref refid="berry_8h_1a4bdadd5fffe12ffca2e3c4add2a80859" kindref="member">be_loadstring</ref>((vm), (s)) || <ref refid="berry_8h_1a2be32ea14c07e301c85510e6a7e2c3b5" kindref="member">be_pcall</ref>((vm), 0))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>(???) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="696" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="696" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="berry_8h_1a79bcd7e5567b6bda617e2d8e34874b05" prot="public" static="no" strong="no">
        <type></type>
        <name>berrorcode</name>
        <enumvalue id="berry_8h_1a79bcd7e5567b6bda617e2d8e34874b05a3acf7d47bdd913f248748c7f421541f3" prot="public">
          <name>BE_OK</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>BE_OK </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="berry_8h_1a79bcd7e5567b6bda617e2d8e34874b05a46c1334eae2840b9cb6ec0a704d4d472" prot="public">
          <name>BE_EXIT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>BE_EXIT </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="berry_8h_1a79bcd7e5567b6bda617e2d8e34874b05ad3a9343f2f184de9116a05884cd3204f" prot="public">
          <name>BE_MALLOC_FAIL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>BE_MALLOC_FAIL </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="berry_8h_1a79bcd7e5567b6bda617e2d8e34874b05ae4d48c8238df2dca822fec719259a599" prot="public">
          <name>BE_EXCEPTION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>BE_EXCEPTION </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="berry_8h_1a79bcd7e5567b6bda617e2d8e34874b05a86b8d162c8937db332b2bee80fa6a32a" prot="public">
          <name>BE_SYNTAX_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>BE_SYNTAX_ERROR </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="berry_8h_1a79bcd7e5567b6bda617e2d8e34874b05aa8974f6845cee6d98e442328c4112ab9" prot="public">
          <name>BE_EXEC_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>BE_EXEC_ERROR </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="berry_8h_1a79bcd7e5567b6bda617e2d8e34874b05a479afae14153588a01b843edff42e4b8" prot="public">
          <name>BE_IO_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>BE_IO_ERROR </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>error code definition </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="91" column="1" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="91" bodyend="99"/>
      </memberdef>
      <memberdef kind="enum" id="berry_8h_1a6be1d974c5767579c9c3986e81c9812b" prot="public" static="no" strong="no">
        <type></type>
        <name>beobshookevents</name>
        <enumvalue id="berry_8h_1a6be1d974c5767579c9c3986e81c9812badbf77384b1709aa3ff2803223d4d3a86" prot="public">
          <name>BE_OBS_PCALL_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>called when be_callp() returned an error, most likely an exception </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="berry_8h_1a6be1d974c5767579c9c3986e81c9812ba7a5aa785ce036ef6995b6a13ac6e0cf0" prot="public">
          <name>BE_OBS_GC_START</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>start of GC, arg = allocated size </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="berry_8h_1a6be1d974c5767579c9c3986e81c9812ba01893a61e8ec11f7ecdf8ba17a8af466" prot="public">
          <name>BE_OBS_GC_END</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>end of GC, arg = allocated size </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="berry_8h_1a6be1d974c5767579c9c3986e81c9812ba1bdedea6e4aff926dd0ec113fd2a3b6f" prot="public">
          <name>BE_OBS_VM_HEARTBEAT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>VM heartbeat called every million instructions </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="berry_8h_1a6be1d974c5767579c9c3986e81c9812ba9f60120c4e657fda61a5078d30139ab6" prot="public">
          <name>BE_OBS_STACK_RESIZE_START</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Berry stack resized </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="602" column="1" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="602" bodyend="608"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="berry_8h_1a0d4c87cacc5b7a0b7d057f77d4c7a6bc" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t bbyte</definition>
        <argsstring></argsstring>
        <name>bbyte</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="56" column="17" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="berry_8h_1a36e9c33dcb738f5c0146ea39292c3a6f" prot="public" static="no">
        <type><ref refid="berry_8h_1ab29732ef463a3b441ad6df0b716c6c2c" kindref="member">BE_INTEGER</ref></type>
        <definition>typedef BE_INTEGER bint</definition>
        <argsstring></argsstring>
        <name>bint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="57" column="20" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="berry_8h_1a7b3477629e24605207e7dda97135210a" prot="public" static="no">
        <type>double</type>
        <definition>typedef double breal</definition>
        <argsstring></argsstring>
        <name>breal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="62" column="16" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="berry_8h_1ad935f181a735187f016dca36d942edb2" prot="public" static="no">
        <type>struct <ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref></type>
        <definition>typedef struct bvm bvm</definition>
        <argsstring></argsstring>
        <name>bvm</name>
        <briefdescription>
<para>virtual machine structure </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="62" column="16" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="berry_8h_1a45be489427325076870d53581c7f5e42" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* bntvfunc) (bvm *)</definition>
        <argsstring>)(bvm *)</argsstring>
        <name>bntvfunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="179" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="berry_8h_1abdde63b90d848abf823f42444df79f4a" prot="public" static="no">
        <type>struct <ref refid="structbntvmodobj" kindref="compound">bntvmodobj</ref></type>
        <definition>typedef struct bntvmodobj bntvmodobj</definition>
        <argsstring></argsstring>
        <name>bntvmodobj</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="237" column="12"/>
      </memberdef>
      <memberdef kind="typedef" id="berry_8h_1a4ef1e830d6d1dd69cb5568275d0be3c9" prot="public" static="no">
        <type>struct <ref refid="structbntvmodule" kindref="compound">bntvmodule</ref></type>
        <definition>typedef struct bntvmodule bntvmodule</definition>
        <argsstring></argsstring>
        <name>bntvmodule</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="249" column="12"/>
      </memberdef>
      <memberdef kind="typedef" id="berry_8h_1a7452d322aeb4e2ff71d24211f42461c3" prot="public" static="no">
        <type>const struct <ref refid="structbclass" kindref="compound">bclass</ref> *</type>
        <definition>typedef const struct bclass* bclass_ptr</definition>
        <argsstring></argsstring>
        <name>bclass_ptr</name>
        <briefdescription>
<para>we need only the pointer to <computeroutput>bclass</computeroutput> here </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="260" column="27" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="berry_8h_1afb0da897cba255419c7e94606f7ccadf" prot="public" static="no">
        <type><ref refid="berry_8h_1a7452d322aeb4e2ff71d24211f42461c3" kindref="member">bclass_ptr</ref></type>
        <definition>typedef bclass_ptr bclass_array[]</definition>
        <argsstring>[]</argsstring>
        <name>bclass_array</name>
        <briefdescription>
<para>array of bclass* pointers, NULL terminated </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="265" column="20" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="berry_8h_1ac41472ceebd2d02d44a0230069cb368c" prot="public" static="no">
        <type>struct <ref refid="structbhookinfo" kindref="compound">bhookinfo</ref></type>
        <definition>typedef struct bhookinfo bhookinfo</definition>
        <argsstring></argsstring>
        <name>bhookinfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="565" column="11"/>
      </memberdef>
      <memberdef kind="typedef" id="berry_8h_1ad40c401f36f2fdea1dcf7807a48a05ed" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bntvhook) (bvm *vm, bhookinfo *info)</definition>
        <argsstring>)(bvm *vm, bhookinfo *info)</argsstring>
        <name>bntvhook</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="574" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="574" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="berry_8h_1a3e441a150e2531c7fa7fcfb7585a7bba" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* bobshook) (bvm *vm, int event,...)</definition>
        <argsstring>)(bvm *vm, int event,...)</argsstring>
        <name>bobshook</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="595" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="595" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="berry_8h_1a87f23fd951421e8995350ddd5096590e" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* bctypefunc) (bvm *, const void *)</definition>
        <argsstring>)(bvm *, const void *)</argsstring>
        <name>bctypefunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="618" column="9" bodyfile="/home/var/tmp/BERRY/berry/src/berry.h" bodystart="618" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="berry_8h_1a7fdb31b8c6c01e0f1b7fd40ce145aad6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> bint</type>
        <definition>bint be_str2int</definition>
        <argsstring>(const char *str, const char **endstr)</argsstring>
        <name>be_str2int</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>endstr</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>(???) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>endstr</parametername>
</parameternamelist>
<parameterdescription>
<para>(???) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="708" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="708" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a784f97a4856b455161d6350d06d9743a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> breal</type>
        <definition>breal be_str2real</definition>
        <argsstring>(const char *str, const char **endstr)</argsstring>
        <name>be_str2real</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>endstr</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>endstr</parametername>
</parameternamelist>
<parameterdescription>
<para>(???) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="719" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="719" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a9cccb1a172f1524bb0dda992597e1114" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> const char *</type>
        <definition>BERRY_API const char* be_str2num</definition>
        <argsstring>(bvm *vm, const char *str)</argsstring>
        <name>be_str2num</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="730" column="22" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="730" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a980cab8052a03285bd64e3f03d43960d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> int</type>
        <definition>int be_top</definition>
        <argsstring>(bvm *vm)</argsstring>
        <name>be_top</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <briefdescription>
<para>returns the absolute index value of the top element in the virtual stack </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
This function returns the absolute index value of the top element in the virtual stack. This value is also the number of elements in the virtual stack (the capacity of the virtual stack). Call this function before adding or subtracting elements in the virtual stack to get the number of parameters of the native function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance virtual machine instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="744" column="15" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="744" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a73cdd56a072d02756feeb24ae864a8b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> const char *</type>
        <definition>BERRY_API const char* be_typename</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_typename</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="758" column="22" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="758" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a30c8be70a320faf4735e8b0b3585ed34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> const char *</type>
        <definition>BERRY_API const char* be_classname</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_classname</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="772" column="22" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="772" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a559ea7517e8fc4cf06c7b0ec16ecacbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_classof</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_classof</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>(???) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="783" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="783" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a9ce5897ac8585a54890a306731dcf0c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> int</type>
        <definition>int be_strlen</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_strlen</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>length of the specified Berry string </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
This function returns the number of bytes in the string at index (the ’\0’ characters at the end of the Berry string are not counted). If the value of the index position is not a string, the be_strlen function will return 0. Although the Berry string is compatible with the C string format, it is not recommended to use the strlen function of the C standard library to measure the length of the Berry string. For Berry strings, be_strlen is faster than strlen and has better compatibility.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the object to be operated </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>length </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="801" column="15" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="801" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a3d355a233b3bb1214e56f6bd02fd7ad9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_strconcat</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_strconcat</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>splice two Berry strings </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
This function will concatenate the string at the parameter position of index with the string at the top position of the stack, and then put the resulting string into the position indexed by index.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>(???) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="814" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="814" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a7b8464c69c27b4fa98ef1d9d2024179e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_pop</definition>
        <argsstring>(bvm *vm, int n)</argsstring>
        <name>be_pop</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>pops the value at the top of the stack </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
Note that the value of n cannot exceed the capacity of the stack.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>number of values to be popped </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="826" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="826" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a2cf27785508356ae22912599efe28b1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_remove</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_remove</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>remove a value from the stack </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
After the value at index is moved out, the following values will be filled forward, and the stack capacity will be reduced by one. The value of index cannot exceed the capacity of the stack.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the object to be removed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="840" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="840" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a11bf1898be3502f233341a717f882e77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> int</type>
        <definition>int be_absindex</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_absindex</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>absolute index value of a given index value </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
If index is positive, the return value is the value of index. If index is negative, the return value of textttbe_absindex is the absolute index value corresponding to index. When index is a negative value (relative index), its index position cannot be lower than the bottom of the stack.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>index value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>absolute index </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="855" column="15" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="855" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a488a00140d566bf997bb16a966d5f3bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_isnil</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_isnil</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>value in virtual stack is nil </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
This function returns whether the value indexed by the parameter index in the virtual stack is nil, if it is, it returns 1, otherwise it returns 0</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>value index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="869" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="869" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a336f9e370286efb20bac2daa5e2cc6a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_isbool</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_isbool</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>value in virtual stack is bool </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
This function returns whether the value indexed by the parameter index in the virtual stack is bool, if it is, it returns 1, otherwise it returns 0</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>value index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="883" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="883" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a23045d026dab4ed2db48b9fefdd1feb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_isint</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_isint</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>value in virtual stack is int </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
This function returns whether the value indexed by the parameter index in the virtual stack is int, if it is, it returns 1, otherwise it returns 0</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>value index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="897" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="897" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a9f29487d9bc4fbfb908cf7f566403c4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_isreal</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_isreal</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>value in virtual stack is real </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
This function returns whether the value indexed by the parameter index in the virtual stack is real, if it is, it returns 1, otherwise it returns 0</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>value index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="911" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="911" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a725950b95c4022ac7d40ddd4326100fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_isnumber</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_isnumber</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>value in virtual stack is number </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
This function returns whether the value indexed by the parameter index in the virtual stack is number, if it is, it returns 1, otherwise it returns 0</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>value index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="925" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="925" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a627df098cc9e9b49d154208527480acb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_isstring</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_isstring</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>value in virtual stack is string </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
This function returns whether the value indexed by the parameter index in the virtual stack is string, if it is, it returns 1, otherwise it returns 0</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>value index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="939" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="939" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1ae05ec465c01f2249cb9cb2f300fd6b6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_isclosure</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_isclosure</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>value in virtual stack is closure </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
This function returns whether the value indexed by the parameter index in the virtual stack is closure, if it is, it returns 1, otherwise it returns 0</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>value index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="953" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="953" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a1c1a66270c7ab652439cd3ef90b45078" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_isntvclos</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_isntvclos</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>value in virtual stack is primitive closure type </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
This function returns whether the value indexed by the parameter index in the virtual stack is primitive closure type, if it is, it returns 1, otherwise it returns 0</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>value index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="967" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="967" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a1c374902ffc2dc729e414d149928402c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_isfunction</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_isfunction</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>value in virtual stack is function </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
This function returns whether the value indexed by the parameter index in the virtual stack is function, if it is, it returns 1, otherwise it returns 0</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>value index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="981" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="981" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1ab62ce089f53d70bb6bc82168fa9173c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_isproto</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_isproto</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>value in virtual stack is proto </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
This function returns whether the value indexed by the parameter index in the virtual stack is proto, if it is, it returns 1, otherwise it returns 0</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>value index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="995" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="995" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1aedcab9a25b748c7739751c374f1aca30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_isclass</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_isclass</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>value in virtual stack is class </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
This function returns whether the value indexed by the parameter index in the virtual stack is class, if it is, it returns 1, otherwise it returns 0</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>value index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1009" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1009" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a06bed8ce372403ca8475693475256966" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_isinstance</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_isinstance</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>value in virtual stack is instance </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
This function returns whether the value indexed by the parameter index in the virtual stack is instance, if it is, it returns 1, otherwise it returns 0</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>value index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1023" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1023" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a7909568de07bd564210c9456cd2622a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_ismodule</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_ismodule</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>value in virtual stack is module </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
This function returns whether the value indexed by the parameter index in the virtual stack is module, if it is, it returns 1, otherwise it returns 0</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>value index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1037" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1037" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a89d04d39713dfd90d1a6d30f02499809" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_islist</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_islist</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>value in virtual stack is list </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
This function returns whether the value indexed by the parameter index in the virtual stack is list, if it is, it returns 1, otherwise it returns 0</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>value index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1051" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1051" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a724d6151dc01d227566d27716e418e3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_ismap</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_ismap</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>value in virtual stack is map </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
This function returns whether the value indexed by the parameter index in the virtual stack is map, if it is, it returns 1, otherwise it returns 0</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>value index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1065" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1065" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1ae2a0515e8ef277b55a50b5885029264f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_iscomptr</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_iscomptr</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>value in virtual stack is universal pointer type </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
This function returns whether the value indexed by the parameter index in the virtual stack is universal pointer type, if it is, it returns 1, otherwise it returns 0</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>value index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1079" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1079" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a9f6ef9366b631d22b1fec9f7762e4cfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_iscomobj</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_iscomobj</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>value index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1090" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1090" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a88efd5a661ef0832ba98d8a3cdb00670" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_isderived</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_isderived</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>value index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1101" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1101" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a5ba1f97b90d6e6190dce3bf4305e326f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_isbytes</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_isbytes</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>value in virtual stack is instance or sub-instance of class bytes </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
This function returns whether the value indexed by the parameter index in the virtual stack is instance or sub-instance of class bytes, if it is, it returns 1, otherwise it returns 0</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>value index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1115" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1115" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a5fe73bf8f5c4d76ad6a38c7c3fe1b87d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> bint</type>
        <definition>bint be_toint</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_toint</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>virtual stack to integer type </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
Get the value of the index position of index from the virtual stack and return it as an integer type. This function does not check the correctness of the type. If the value is an instance, the method toint() is called if it exists.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>value index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1130" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1130" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a9fbad5a2e71b5c4b1590c8ceaa3390d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> breal</type>
        <definition>breal be_toreal</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_toreal</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>virtual stack to floating-point number type </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
Get the value of the index position of index from the virtual stack and return it as an floating-point number type. This function does not check the correctness of the type.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1144" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1144" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1adff008961a65207378344a1299295b57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> int</type>
        <definition>int be_toindex</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_toindex</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>virtual stack to integer type </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
Get the value of the index position of index from the virtual stack and return it as an integer type. This function does not check the correctness of the type. Unlike be_toint, the return value type of be_toindex is int, while the return value of the former is bint.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1159" column="15" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1159" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1ac6050b4584f3711bd510f073c9293e95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_tobool</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_tobool</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>virtual stack to Boolean type </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
Get the value of the index position of index from the virtual stack and return it as a Boolean type. If the indexed value is not of Boolean type, it will be converted according to the rules in section type_bool, and the conversion process will not cause the indexed value to change. If the value is an instance, the method tobool() is called if it exists.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1175" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1175" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1aca87e86047438f71581e09c6f9adcb81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> const char *</type>
        <definition>BERRY_API const char* be_tostring</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_tostring</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1192" column="22" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1192" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a45c1e7911b663819bc04bc9238e894ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> const char *</type>
        <definition>BERRY_API const char* be_toescape</definition>
        <argsstring>(bvm *vm, int index, int mode)</argsstring>
        <name>be_toescape</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1204" column="22" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1204" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1af6d484fcfd577a9df9faaabd1ad381e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void *</type>
        <definition>BERRY_API void* be_tocomptr</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_tocomptr</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1217" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1217" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a4ac3786fafe0cbb1e79190697003039d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_moveto</definition>
        <argsstring>(bvm *vm, int from, int to)</argsstring>
        <name>be_moveto</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>from</declname>
        </param>
        <param>
          <type>int</type>
          <declname>to</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>to</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1228" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1228" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1ae4d8241b8ee8aabdea31a70214cf901a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_pushnil</definition>
        <argsstring>(bvm *vm)</argsstring>
        <name>be_pushnil</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <briefdescription>
<para>Push a nil value onto the virtual stack. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1238" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1238" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a430ec99531afb60bc16d904ad38db0d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_pushbool</definition>
        <argsstring>(bvm *vm, int b)</argsstring>
        <name>be_pushbool</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Push a Boolean value onto the virtual stack. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
Push a Boolean value onto the virtual stack. The parameter b is the boolean value to be pushed onto the stack. When the value is 0, it means false, otherwise it is true.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1252" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1252" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a9e63236d48efd3f1d9c8eabf91d3a49d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_pushint</definition>
        <argsstring>(bvm *vm, bint i)</argsstring>
        <name>be_pushint</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>bint</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Push an integer value i onto the virtual stack. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1262" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1262" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a27a65393db4b141eec8ac0356edbac33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_pushreal</definition>
        <argsstring>(bvm *vm, breal r)</argsstring>
        <name>be_pushreal</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>breal</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Push a floating point value r onto the virtual stack. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1272" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1272" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1af5167d9a490d876c641b77cfc12b520d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_pushstring</definition>
        <argsstring>(bvm *vm, const char *str)</argsstring>
        <name>be_pushstring</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Push the string str onto the virtual stack. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
Push the string str onto the virtual stack. The parameter str must point to a C string that ends with a null character ’\0’, and a null pointer cannot be passed in.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1286" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1286" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a1a071289afb6da0fad98cc451fedaa1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_pushnstring</definition>
        <argsstring>(bvm *vm, const char *str, size_t n)</argsstring>
        <name>be_pushnstring</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Push the string str of length n onto the virtual stack. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
Push the string str of length n onto the virtual stack. The length of the string is subject to the parameter n, and the null character is not used as the end mark of the string.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1301" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1301" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1aa9e6b44089c9bcc0a1a315f317005cdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> const char *</type>
        <definition>BERRY_API const char* be_pushfstring</definition>
        <argsstring>(bvm *vm, const char *format,...)</argsstring>
        <name>be_pushfstring</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>format</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1319" column="22" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1319" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1aa18c6d8f01e91ce88916bc5225acf6b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void *</type>
        <definition>BERRY_API void* be_pushbuffer</definition>
        <argsstring>(bvm *vm, size_t size)</argsstring>
        <name>be_pushbuffer</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1329" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1329" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a262e3dc79a2bbcbe72cc90c3e0b457db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_pushvalue</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_pushvalue</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Push the value with index index onto the top of the virtual stack. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1339" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1339" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a9a970ce282202adf4db048d161819f11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_pushclosure</definition>
        <argsstring>(bvm *vm, void *cl)</argsstring>
        <name>be_pushclosure</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>cl</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cl</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1349" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1349" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1ab8c8bb159c49602c1f3ec2a8752374bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_pushntvclosure</definition>
        <argsstring>(bvm *vm, bntvfunc f, int nupvals)</argsstring>
        <name>be_pushntvclosure</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>bntvfunc</type>
          <declname>f</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nupvals</declname>
        </param>
        <briefdescription>
<para>Push a native closure onto the top of the virtual stack. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
Push a native closure onto the top of the virtual stack. The parameter f is the C function pointer of the native closure, and nupvals is the upvalue number of the closure.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nupvals</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1364" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1364" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1aec99ce1feb2c3256dc054d9b9190f63d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_pushntvfunction</definition>
        <argsstring>(bvm *vm, bntvfunc f)</argsstring>
        <name>be_pushntvfunction</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>bntvfunc</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Push a native function onto the top of the virtual stack, and the parameter f is the native function pointer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1374" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1374" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a643e28bb9202c7e07b1f6c6780614b97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_pushclass</definition>
        <argsstring>(bvm *vm, const char *name, const bnfuncinfo *lib)</argsstring>
        <name>be_pushclass</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="structbnfuncinfo" kindref="compound">bnfuncinfo</ref> *</type>
          <declname>lib</declname>
        </param>
        <briefdescription>
<para>Push a native class onto the top of the virtual stack. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
Push a native class onto the top of the virtual stack. The parameter name is the name of the native class, and the parameter lib is the attribute description of the native class.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lib</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1388" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1388" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1ad35b0693226ebee04aed4572865b0fc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_pushntvclass</definition>
        <argsstring>(bvm *vm, const struct bclass *c)</argsstring>
        <name>be_pushntvclass</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbclass" kindref="compound">bclass</ref> *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1398" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1398" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a9c257958f5e43debf47008b80f972d60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_pushcomptr</definition>
        <argsstring>(bvm *vm, void *ptr)</argsstring>
        <name>be_pushcomptr</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Push a general pointer onto the top of the virtual stack. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
Push a general pointer onto the top of the virtual stack. The general pointer ptr points to a certain C data area. Since the content pointed to by this pointer is not maintained by Berry’s garbage collector, users have to maintain the life cycle of the data themselves.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1413" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1413" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a72c9b1a4d8d9d25e1f13c9293685313e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_pushiter</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_pushiter</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Push an iterator onto the top of the virtual stack. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1424" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1424" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a3cfabff41e89970ac97f864e90f25bc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_newlist</definition>
        <argsstring>(bvm *vm)</argsstring>
        <name>be_newlist</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <briefdescription>
<para>creates a new list value </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
After this function is successfully called, the new list value will be pushed onto the top of the stack. list value is an internal representation of a list, not to be confused with an instance of the list class.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1436" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1436" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a00c377d496271c73103a69e554b00856" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_newmap</definition>
        <argsstring>(bvm *vm)</argsstring>
        <name>be_newmap</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <briefdescription>
<para>creates a new map value </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
After this function is successfully called, the new map value will be pushed onto the top of the stack. map value is an internal representation of a list, not to be confused with an instance of the map class.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1448" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1448" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a2becc2ba1ffdacea07a2c22446a8b970" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_newmodule</definition>
        <argsstring>(bvm *vm)</argsstring>
        <name>be_newmodule</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1457" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1457" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1aa204bb0762c912b9b34833d4a8f51e25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_newcomobj</definition>
        <argsstring>(bvm *vm, void *data, bntvfunc destroy)</argsstring>
        <name>be_newcomobj</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>bntvfunc</type>
          <declname>destroy</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>destroy</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1468" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1468" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a1102f2f696392904b6e7e6b0945e2e86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_newobject</definition>
        <argsstring>(bvm *vm, const char *name)</argsstring>
        <name>be_newobject</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1478" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1478" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a27221293c05b4bc215e49e5730c2e7e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_copy</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_copy</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1489" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1489" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1adb1a7ead69966ce464f119a26a4c4395" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_setname</definition>
        <argsstring>(bvm *vm, int index, const char *name)</argsstring>
        <name>be_setname</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1501" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1501" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a46947d32e731a5b740a906da7200ac2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_getglobal</definition>
        <argsstring>(bvm *vm, const char *name)</argsstring>
        <name>be_getglobal</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>pushes the global variable with the specified name onto the stack </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
After this function is called, the global variable named name will be pushed onto the top of the virtual stack</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1514" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1514" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a33e13144a4aa027883b7c41bff99b570" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_setglobal</definition>
        <argsstring>(bvm *vm, const char *name)</argsstring>
        <name>be_setglobal</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1524" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1524" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1ae13c1fea2e1a3fd6c1ba92c60accbd46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_getbuiltin</definition>
        <argsstring>(bvm *vm, const char *name)</argsstring>
        <name>be_getbuiltin</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1535" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1535" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1ad94da7053ced75d4b5292517804a5e5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_setmember</definition>
        <argsstring>(bvm *vm, int index, const char *k)</argsstring>
        <name>be_setmember</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>set the value of the member variable of the instance object class </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
This function will copy the value at the top of the stack to the member k of the index position instance. Note that the top element of the stack will not pop up automatically.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the instance object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the member </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1550" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1550" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a73243880ed94d6e7d4c6674122965137" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_getmember</definition>
        <argsstring>(bvm *vm, int index, const char *k)</argsstring>
        <name>be_getmember</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>get the value of the member variable of the instance object class </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
This function pushes the value of the member of the index position instance k onto the top of the virtual stack.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the instance object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the member </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1564" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1564" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1abed8815fe2236e251f29cafc666befa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_getmethod</definition>
        <argsstring>(bvm *vm, int index, const char *k)</argsstring>
        <name>be_getmethod</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1576" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1576" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1abb7d9cbd04edf59754007057374e9491" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_getindex</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_getindex</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>get the value of list or map </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
This function is used to get an element from the map or list container (internal values, not instances of map or list classes), and the index of the element is stored at the top of the stack (relative index is  − 1). After calling this function, the value obtained from the container will be pushed onto the top of the stack. If there is no subscript pointed to by the container, the value of nil will be pushed onto the top of the stack.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the object to be operated </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1592" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1592" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a7ae7e74d7e3cd87dbfb7f539a9d0dfa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_setindex</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_setindex</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>set a value in list or map </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
This function is used to write an element of the map or list container. The index of the value to be written in the virtual stack is  − 1, and the index of the subscript of the write position in the virtual stack is  − 2. If the element with the specified subscript does not exist in the container, the write operation will fail.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the object to be operated </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1608" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1608" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a1e11add0158c7ac14ac6553269524d09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_getupval</definition>
        <argsstring>(bvm *vm, int index, int pos)</argsstring>
        <name>be_getupval</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>read an Up Value of the native closure </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
The read Up Value will be pushed onto the top of the virtual stack.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the native closure index value of the Up Value to be read </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>position of the Up Value in the native closure Up Value table (numbering starts from 0) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1621" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1621" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a5fb668650de868a7ca945b11968848e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_setupval</definition>
        <argsstring>(bvm *vm, int index, int pos)</argsstring>
        <name>be_setupval</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>set an Up Value of the native closure. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
This function obtains a value from the top of the virtual stack and writes it to the target Up Value. After the operation is completed, the top value of the stack will not be popped from the stack.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the native closure index value of the Up Value to be read </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>position of the Up Value in the native closure Up Value table (numbering starts from 0) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1636" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1636" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1ab6f432d08eeb75812c7ca6080a0e9ab6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_setsuper</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_setsuper</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1647" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1647" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a6313c2ba1133b47e560b2b35edef69ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_getsuper</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_getsuper</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>get the parent object of the base class or instance of the class. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
If the value at index is a class with a base class, the function will push its base class onto the top of the stack; if the value at index is an object with a parent object, the function will take its parent The object is pushed onto the top of the stack; otherwise, a value of nil is pushed onto the top of the stack.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the class or object to be operated </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1662" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1662" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1af484946347539b59ef8482cd04529c26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> int</type>
        <definition>int be_data_size</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_data_size</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>get the number of elements contained in the container </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
If the value at index is a Map value or List value, the function returns the number of elements contained in the container, otherwise it returns -1.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the container object to be operated </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1676" column="15" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1676" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a5a1d36f873d7fe5cf69c7387f37b02c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_data_push</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_data_push</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>append a new element to the end of the container. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
The object at index must be a List value. This function gets a value from the top of the stack and appends it to the end of the container. After the operation is completed, the value at the top of the stack will not be popped from the stack.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of the container object to be operate </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1690" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1690" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1afac5fce83aae7f5781b9ebe3c527c3d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_data_insert</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_data_insert</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>insert a pair of elements into the container </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
The object at index must be a List value or a Map value. The inserted element forms a pair of key-value pairs. The value is stored at the top of the stack, and the key is stored at the previous index on the top of the stack. It should be noted that the key inserted into the Map container cannot be a nil value, and the key inserted into the List container must be an integer value. If the operation is successful, the function will return bture, otherwise it will return bfalse.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>container object to be operated </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1708" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1708" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a1aea7d810646e6bd331932b0713a90e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_data_remove</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_data_remove</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>remove an element in the container </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
The object at index must be a List value or Map value. For the Map container, the key to delete the element is stored on the top of the virtual stack (need to be pressed before the function call); for the List container, the index of the element to be deleted is stored on the top of the virtual stack (need to be before the function call) push into). If the operation is successful, the function will return bture, otherwise it will return bfalse.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>container object to be operated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1726" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1726" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a59b2bf6d7f0aeca04b6215afab0c4b4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_data_merge</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_data_merge</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1737" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1737" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a756d04be68d93c4513263dd489c7a5a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_data_resize</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_data_resize</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>reset the capacity of the container </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
This function is only available for List containers, and the new capacity is stored on the top of the virtual stack (must be an integer).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>container object to be operated </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1749" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1749" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a286250770a639230ac08f12d24ec0de9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_data_reverse</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_data_reverse</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1759" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1759" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a68a7a4397038079c02832c0820992e7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> int</type>
        <definition>int be_iter_next</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_iter_next</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>get the next element of the iterator </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
The iterator object may be an iterator of a List container or a Map container. For the List iterator, this function pushes the iteration result value onto the top of the stack, while for the Map iterator, it pushes the key value into the previous position and the top of the stack respectively. Calling this function will update the iterator. If the function returns 0, the call fails, returning 1 to indicate that the current iterator is a List iterator, and returning 2 to indicate that the current iterator is a Map iterator.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>iterator to be operated </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1777" column="15" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1777" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a9a110fa9da91be0c94ad5baa4e8a3f0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_iter_hasnext</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_iter_hasnext</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>test whether there is another element in the iterator </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
The iterator object may be an iterator of a List container or a Map container. If there are more iterable elements in the iterator, return 1, otherwise return 0.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>iterator to be operated </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1791" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1791" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a326e33d00c6480f551c5c8d0b5ee1c49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_refcontains</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_refcontains</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>test whether there is a reference to the specified object in the reference stack </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
This function is used to test whether there is a reference to the specified object in the reference stack. It must be used in conjunction with be_refpush and be_refpop. This API can avoid recursion when traversing objects that have their own references. This function is used for the value of an instance type. If there is a reference to the object in the reference stack, it returns 1, otherwise it returns 0.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>object to be operated </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1808" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1808" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1ad55bb9a14a97dce0c99054041ad0c860" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_refpush</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_refpush</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Push the reference of the specified object onto the reference stack. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
This function is used for the value of an instance type.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>object to be operated </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1820" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1820" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a8008f1a88b0c1e61988d6f7ada696169" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_refpop</definition>
        <argsstring>(bvm *vm)</argsstring>
        <name>be_refpop</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <briefdescription>
<para>Pop the object at the top of the reference stack. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
This function is used in pairs with be_refpush</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1831" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1831" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a5daca17dbf6cd5389047364e6f092bee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_stack_require</definition>
        <argsstring>(bvm *vm, int count)</argsstring>
        <name>be_stack_require</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>tests the amount of free space on the stack and expands the stack space if it is insufficient </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
If the free capacity of the virtual stack allocated by the VM to the native function is lower than this value, an expansion operation will be performed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>required free stack capacity. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1844" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1844" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a05569afc51815c4d7f6909675557556a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_getmodule</definition>
        <argsstring>(bvm *vm, const char *k)</argsstring>
        <name>be_getmodule</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>FFI function</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1855" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1855" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a34baf250c6397ee37bca3c8a90e413f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_iseq</definition>
        <argsstring>(bvm *vm)</argsstring>
        <name>be_iseq</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>relop operation API</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1865" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1865" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a9811056d6683e3404b6b25f501c56840" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_isneq</definition>
        <argsstring>(bvm *vm)</argsstring>
        <name>be_isneq</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>relop operation API</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1875" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1875" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a5bf04bc6689493cb077eb1f4d0efbbb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_islt</definition>
        <argsstring>(bvm *vm)</argsstring>
        <name>be_islt</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>relop operation API</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1885" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1885" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a2ce9751f25d94b607aae92c751eff967" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_isle</definition>
        <argsstring>(bvm *vm)</argsstring>
        <name>be_isle</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>relop operation API</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1895" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1895" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1aa87eb547c9922371a5a68fdbe015df95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_isgt</definition>
        <argsstring>(bvm *vm)</argsstring>
        <name>be_isgt</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>relop operation API</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1905" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1905" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a19a3fed68a82a5f3c139475f272269b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
        <definition>bool be_isge</definition>
        <argsstring>(bvm *vm)</argsstring>
        <name>be_isge</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>relop operation API</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1915" column="17" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1915" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a657069bddbc8eba1faec45adf933b6a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> int</type>
        <definition>int be_returnvalue</definition>
        <argsstring>(bvm *vm)</argsstring>
        <name>be_returnvalue</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Function call/return API</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1925" column="15" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1925" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a441cd6a5ce904d027345d61fa593cf36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> int</type>
        <definition>int be_returnnilvalue</definition>
        <argsstring>(bvm *vm)</argsstring>
        <name>be_returnnilvalue</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Function call/return API</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1935" column="15" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1935" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a89b32cce1f7bdd732b939c78baaa22c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_call</definition>
        <argsstring>(bvm *vm, int argc)</argsstring>
        <name>be_call</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Function call/return API</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1945" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1945" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a2be32ea14c07e301c85510e6a7e2c3b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> int</type>
        <definition>int be_pcall</definition>
        <argsstring>(bvm *vm, int argc)</argsstring>
        <name>be_pcall</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Function call/return API</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1956" column="15" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1956" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a3a134306e7712bcb35f107dfa13e44f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_exit</definition>
        <argsstring>(bvm *vm, int status)</argsstring>
        <name>be_exit</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Function call/return API</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1966" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1966" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a5f917fe30e568317ff655ab67c87f6d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_raise</definition>
        <argsstring>(bvm *vm, const char *except, const char *msg)</argsstring>
        <name>be_raise</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>except</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>exception API</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>except</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1977" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1977" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a904b8221651e0150bd1645a12f330c94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> int</type>
        <definition>int be_getexcept</definition>
        <argsstring>(bvm *vm, int code)</argsstring>
        <name>be_getexcept</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>code</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>exception API</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1988" column="15" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1988" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a253a84d125567a450ddf3732e537b394" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_dumpvalue</definition>
        <argsstring>(bvm *vm, int index)</argsstring>
        <name>be_dumpvalue</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>exception API</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="1998" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="1998" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a87f00d8286e340360b3c564fa6c96a06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_dumpexcept</definition>
        <argsstring>(bvm *vm)</argsstring>
        <name>be_dumpexcept</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>exception API</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="2007" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="2007" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a5a530376546332770db9973beb174050" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_stop_iteration</definition>
        <argsstring>(bvm *vm)</argsstring>
        <name>be_stop_iteration</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>exception API</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="2016" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="2016" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a85a8212877e074c6a3fdec604eef5c7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_regfunc</definition>
        <argsstring>(bvm *vm, const char *name, bntvfunc f)</argsstring>
        <name>be_regfunc</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bntvfunc</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>register a native function </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>exception API</para>
</simplesect>
The specific behavior of this function is related to the value of the BE_USE_PRECOMPILED_OBJECT macro (although the FFI is still available when using the compile-time construction technique, it cannot dynamically register the built-in variables. In this case, please refer to the method of registering the built-in objects.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the native function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer of the native function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="2032" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="2032" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1aa6328e3b23c451178acbd26434badf86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_regclass</definition>
        <argsstring>(bvm *vm, const char *name, const bnfuncinfo *lib)</argsstring>
        <name>be_regclass</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="structbnfuncinfo" kindref="compound">bnfuncinfo</ref> *</type>
          <declname>lib</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>exception API</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lib</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="2043" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="2043" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a66471bbb476bcf65e269277f20802cd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> <ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
        <definition>BERRY_API bvm* be_vm_new</definition>
        <argsstring>(void)</argsstring>
        <name>be_vm_new</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="2052" column="15" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="2052" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1ab351e7affe3deeff456b59e951350d12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_vm_delete</definition>
        <argsstring>(bvm *vm)</argsstring>
        <name>be_vm_delete</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <briefdescription>
<para>Destroy a VM. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>VM management API</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="2061" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="2061" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1af963b04a6ee2b417c5340c1c20bbac73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_set_obs_hook</definition>
        <argsstring>(bvm *vm, bobshook hook)</argsstring>
        <name>be_set_obs_hook</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>bobshook</type>
          <declname>hook</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Observability hook</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hook</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="2071" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="2071" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a10d4c884e8499d9fa43e9a77f6d41ba0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_set_ctype_func_hanlder</definition>
        <argsstring>(bvm *vm, bctypefunc handler)</argsstring>
        <name>be_set_ctype_func_hanlder</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>bctypefunc</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Observability hook</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="2081" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="2081" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1aab39998d8b2d5edd01b8f95300003841" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> bctypefunc</type>
        <definition>bctypefunc be_get_ctype_func_hanlder</definition>
        <argsstring>(bvm *vm)</argsstring>
        <name>be_get_ctype_func_hanlder</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Observability hook</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="2091" column="22" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="2091" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a2778739fa0b08bc81e566772fe5ad78f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> int</type>
        <definition>int be_loadbuffer</definition>
        <argsstring>(bvm *vm, const char *name, const char *buffer, size_t length)</argsstring>
        <name>be_loadbuffer</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>load a piece of source code from the buffer and compile it into bytecode </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>code load API</para>
</simplesect>
f the compilation is successful, be_loadbuffer will compile the source code into a Berry function and place it on the top of the virtual stack. If the compilation encounters an error, be_loadbuffer will return an error value of type berrorcode (Section errorcode), and if possible, will store the specific error message string at the top of the virtual stack.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>string, which is usually used to mark the source of the source code </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer for storing the source code </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="2109" column="15" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="2109" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a39bbc34f6d9df4342e6e2579acbcc06c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> int</type>
        <definition>BERRY_API int be_loadmode</definition>
        <argsstring>(bvm *vm, const char *name, bbool islocal)</argsstring>
        <name>be_loadmode</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref></type>
          <declname>islocal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="2121" column="15" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="2121" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1ac84c74454daa7f452fb8fe0b21e74056" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> int</type>
        <definition>int be_loadlib</definition>
        <argsstring>(bvm *vm, const char *path)</argsstring>
        <name>be_loadlib</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>code load API</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="2132" column="15" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="2132" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a4fc13455b23aa4e2de6d55b03f22e969" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> int</type>
        <definition>int be_savecode</definition>
        <argsstring>(bvm *vm, const char *name)</argsstring>
        <name>be_savecode</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>code load API</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>(???) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="2143" column="15" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="2143" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a072f72b511b16d5fcdc4669541d25a54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_module_path</definition>
        <argsstring>(bvm *vm)</argsstring>
        <name>be_module_path</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>module path list API</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="2152" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="2152" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a7159bcb33f73e6dc798fec6d184ef97c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_module_path_set</definition>
        <argsstring>(bvm *vm, const char *path)</argsstring>
        <name>be_module_path_set</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>module path list API</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="2162" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="2162" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a5d566b5616eb1657624bc07af2e3b385" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void *</type>
        <definition>BERRY_API void* be_pushbytes</definition>
        <argsstring>(bvm *vm, const void *buf, size_t len)</argsstring>
        <name>be_pushbytes</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="2173" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="2173" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a70cf9d7a6f4686196d0cb372507396f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> const void *</type>
        <definition>BERRY_API const void* be_tobytes</definition>
        <argsstring>(bvm *vm, int index, size_t *len)</argsstring>
        <name>be_tobytes</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="2188" column="22" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="2188" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1a5151876ed2f05c21b353eaff0b3b11bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_sethook</definition>
        <argsstring>(bvm *vm, const char *mask)</argsstring>
        <name>be_sethook</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>debug API</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="2198" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="2198" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1ad63293b5a49c644118ccac701c7ac67e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_setntvhook</definition>
        <argsstring>(bvm *vm, bntvhook hook, void *data, int mask)</argsstring>
        <name>be_setntvhook</name>
        <param>
          <type><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref> *</type>
          <declname>vm</declname>
        </param>
        <param>
          <type>bntvhook</type>
          <declname>hook</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>(???) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>debug API</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vm</parametername>
</parameternamelist>
<parameterdescription>
<para>virtual machine instance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hook</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="2210" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="2210" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1ae0e72ac28fef5610f98fa67fbb03b645" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> void</type>
        <definition>void be_writebuffer</definition>
        <argsstring>(const char *buffer, size_t length)</argsstring>
        <name>be_writebuffer</name>
        <param>
          <type>const char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>implement on berry_port.c </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>basic character IO API</para>
</simplesect>
Output a piece of data to the standard output device, the parameter <computeroutput>buffer</computeroutput> is the first address of the output data block, and <computeroutput>length</computeroutput> is the length of the output data block. This function outputs to the <computeroutput>stdout</computeroutput> file by default. Inside the interpreter, this function is usually used as a character stream output, not a binary stream.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="2226" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="2226" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="berry_8h_1ab364e574e0a1262411ad60b82adee774" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref> char *</type>
        <definition>BERRY_API char* be_readstring</definition>
        <argsstring>(char *buffer, size_t size)</argsstring>
        <name>be_readstring</name>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/var/tmp/BERRY/berry/src/berry.h" line="2252" column="16" declfile="/home/var/tmp/BERRY/berry/src/berry.h" declline="2252" declcolumn="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Main berry entry API. </para>
    </briefdescription>
    <detaileddescription>
<para>This file is part of the Berry default interpreter. <simplesect kind="author"><para><ulink url="mailto:skiars@qq.com">skiars@qq.com</ulink>, <ulink url="https://github.com/Skiars/berry">https://github.com/Skiars/berry</ulink> </para>
</simplesect>
<simplesect kind="copyright"><para>(c) 2018-2022 Guan Wenliang MIT License (<ulink url="https://github.com/Skiars/berry/blob/master/LICENSE">https://github.com/Skiars/berry/blob/master/LICENSE</ulink>) </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BERRY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BERRY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;berry_conf.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="berry_8h_1aafa41a3004f1759ee3f1bacb8751bdcd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BERRY_VERSION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;1.1.0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BE_STACK_TOTAL_MAX<sp/>&lt;<sp/>BE_STACK_FREE_MIN<sp/>*<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;The<sp/>value<sp/>of<sp/>the<sp/>macro<sp/>BE_STACK_TOTAL_MAX<sp/>is<sp/>too<sp/>small.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BE_INTGER_TYPE<sp/>==<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="berry_8h_1ab29732ef463a3b441ad6df0b716c6c2c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>BE_INTEGER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>BE_INT_FMTLEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>BE_INTGER_TYPE<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>BE_INTEGER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>BE_INT_FMTLEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;l&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>BE_INTGER_TYPE<sp/>==<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>BE_INTEGER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__int64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>BE_INT_FMTLEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;I64&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BE_INTEGER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long<sp/>long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BE_INT_FMTLEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;ll&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#error<sp/>&quot;Unsupported<sp/>integer<sp/>type<sp/>for<sp/>`bint`.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BE_INT_FORMAT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;%&quot;</highlight><highlight class="normal"><sp/>BE_INT_FMTLEN<sp/>&quot;d&quot;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/>bbyte;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1ab29732ef463a3b441ad6df0b716c6c2c" kindref="member">BE_INTEGER</ref><sp/>bint;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BE_USE_SINGLE_FLOAT<sp/>!=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>breal;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="berry_8h_1ad935f181a735187f016dca36d942edb2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>breal;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>bbool<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>bfalse<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>btrue<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>bbool<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>bfalse<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>btrue<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="berry_8h_1a79bcd7e5567b6bda617e2d8e34874b05" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a79bcd7e5567b6bda617e2d8e34874b05" kindref="member">berrorcode</ref><sp/>{</highlight></codeline>
<codeline lineno="92" refid="berry_8h_1a79bcd7e5567b6bda617e2d8e34874b05a3acf7d47bdd913f248748c7f421541f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="berry_8h_1a79bcd7e5567b6bda617e2d8e34874b05a3acf7d47bdd913f248748c7f421541f3" kindref="member">BE_OK</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="93" refid="berry_8h_1a79bcd7e5567b6bda617e2d8e34874b05a46c1334eae2840b9cb6ec0a704d4d472" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="berry_8h_1a79bcd7e5567b6bda617e2d8e34874b05a46c1334eae2840b9cb6ec0a704d4d472" kindref="member">BE_EXIT</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94" refid="berry_8h_1a79bcd7e5567b6bda617e2d8e34874b05ad3a9343f2f184de9116a05884cd3204f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="berry_8h_1a79bcd7e5567b6bda617e2d8e34874b05ad3a9343f2f184de9116a05884cd3204f" kindref="member">BE_MALLOC_FAIL</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="95" refid="berry_8h_1a79bcd7e5567b6bda617e2d8e34874b05ae4d48c8238df2dca822fec719259a599" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="berry_8h_1a79bcd7e5567b6bda617e2d8e34874b05ae4d48c8238df2dca822fec719259a599" kindref="member">BE_EXCEPTION</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="96" refid="berry_8h_1a79bcd7e5567b6bda617e2d8e34874b05a86b8d162c8937db332b2bee80fa6a32a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="berry_8h_1a79bcd7e5567b6bda617e2d8e34874b05a86b8d162c8937db332b2bee80fa6a32a" kindref="member">BE_SYNTAX_ERROR</ref>,<sp/></highlight></codeline>
<codeline lineno="97" refid="berry_8h_1a79bcd7e5567b6bda617e2d8e34874b05aa8974f6845cee6d98e442328c4112ab9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="berry_8h_1a79bcd7e5567b6bda617e2d8e34874b05aa8974f6845cee6d98e442328c4112ab9" kindref="member">BE_EXEC_ERROR</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="berry_8h_1a79bcd7e5567b6bda617e2d8e34874b05a479afae14153588a01b843edff42e4b8" kindref="member">BE_IO_ERROR</ref><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="99" refid="berry_8h_1a79bcd7e5567b6bda617e2d8e34874b05a479afae14153588a01b843edff42e4b8" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="berry_8h_1a2c2a2b1c23ed45cd016ba7dfcad7fe05" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BE_CNIL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BE_CINT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BE_CREAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BE_CBOOL<sp/><sp/><sp/><sp/><sp/><sp/><sp/>3<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BE_CFUNCTION<sp/><sp/><sp/>4<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BE_CSTRING<sp/><sp/><sp/><sp/><sp/>5<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BE_CMODULE<sp/><sp/><sp/><sp/><sp/>6<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_WIN32)<sp/>||<sp/>defined(__CYGWIN__)<sp/></highlight><highlight class="comment">/*<sp/>in<sp/>Windows<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#if<sp/>defined(BERRY_MODULE)<sp/></highlight><highlight class="comment">/*<sp/>berry<sp/>extension<sp/>module<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>BERRY_API<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__declspec(dllimport)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else<sp/></highlight><highlight class="comment">/*<sp/>berry<sp/>core<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>BERRY_API<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__declspec(dllexport)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>other<sp/>platforms<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BERRY_API<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_WIN32)<sp/>||<sp/>defined(__CYGWIN__)<sp/></highlight><highlight class="comment">/*<sp/>in<sp/>Windows<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>BERRY_LOCAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__GNUC__)<sp/></highlight><highlight class="comment">/*<sp/>in<sp/>GCC<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BERRY_LOCAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__attribute__<sp/>((visibility<sp/>(&quot;hidden&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>other<sp/>platforms<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="berry_8h_1ad582cbe4aa73dcfbefcb8270e06cc5df" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>BERRY_LOCAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cpp_constexpr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>BE_CONSTEXPR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>BE_CONSTEXPR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BE_EXPORT_VARIABLE<sp/><sp/><sp/><sp/><sp/><sp/>extern<sp/>&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BE_EXPORT_VARIABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*bntvfunc)(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref>*);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbclass" kindref="compound">bclass</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="structbnfuncinfo" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name;<sp/><sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>bntvfunc<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="195"><highlight class="normal">}<sp/><ref refid="structbnfuncinfo" kindref="compound">bnfuncinfo</ref>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="structbntvmodobj" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbntvmodobj" kindref="compound">bntvmodobj</ref><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="205" refid="unionbntvmodobj_1_1value" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="unionbntvmodobj_1_1value" kindref="compound">value</ref><sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bint<sp/>i;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>breal<sp/>r;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/>b;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bntvfunc<sp/>f;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*o;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BE_CONSTEXPR<sp/><ref refid="unionbntvmodobj_1_1value" kindref="compound">value</ref>(bint<sp/>v)<sp/>:<sp/>i(v)<sp/>{}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BE_CONSTEXPR<sp/><ref refid="unionbntvmodobj_1_1value" kindref="compound">value</ref>(breal<sp/>v)<sp/>:<sp/>r(v)<sp/>{}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BE_CONSTEXPR<sp/><ref refid="unionbntvmodobj_1_1value" kindref="compound">value</ref>(<ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/>v)<sp/>:<sp/>b(v)<sp/>{}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BE_CONSTEXPR<sp/><ref refid="unionbntvmodobj_1_1value" kindref="compound">value</ref>(bntvfunc<sp/>v)<sp/>:<sp/>f(v)<sp/>{}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BE_CONSTEXPR<sp/><ref refid="unionbntvmodobj_1_1value" kindref="compound">value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*v)<sp/>:<sp/>s(v)<sp/>{}<sp/></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BE_CONSTEXPR<sp/><ref refid="unionbntvmodobj_1_1value" kindref="compound">value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*v)<sp/>:<sp/>o(v)<sp/>{}<sp/></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>u;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>BE_CONSTEXPR<sp/><ref refid="structbntvmodobj" kindref="compound">bntvmodobj</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)<sp/>:</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name(name),<sp/>type(<ref refid="berry_8h_1a2c2a2b1c23ed45cd016ba7dfcad7fe05" kindref="member">BE_CNIL</ref>),<sp/>u(bint(0))<sp/>{}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>BE_CONSTEXPR<sp/><ref refid="structbntvmodobj" kindref="compound">bntvmodobj</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/>bint<sp/>v)<sp/>:</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name(name),<sp/>type(BE_CINT),<sp/>u(v)<sp/>{}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>BE_CONSTEXPR<sp/><ref refid="structbntvmodobj" kindref="compound">bntvmodobj</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/>breal<sp/>v)<sp/>:</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name(name),<sp/>type(BE_CREAL),<sp/>u(v)<sp/>{}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>BE_CONSTEXPR<sp/><ref refid="structbntvmodobj" kindref="compound">bntvmodobj</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/>v)<sp/>:</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name(name),<sp/>type(BE_CBOOL),<sp/>u(v)<sp/>{}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>BE_CONSTEXPR<sp/><ref refid="structbntvmodobj" kindref="compound">bntvmodobj</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/>bntvfunc<sp/>v)<sp/>:</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name(name),<sp/>type(BE_CFUNCTION),<sp/>u(v)<sp/>{}<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>BE_CONSTEXPR<sp/><ref refid="structbntvmodobj" kindref="compound">bntvmodobj</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*v)<sp/>:</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name(name),<sp/>type(BE_CSTRING),<sp/>u(v)<sp/>{}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>BE_CONSTEXPR<sp/><ref refid="structbntvmodobj" kindref="compound">bntvmodobj</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_tpye,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*v)<sp/>:</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name(name),<sp/>type(_tpye),<sp/>u(v)<sp/>{}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal">}<sp/><ref refid="structbntvmodobj" kindref="compound">bntvmodobj</ref>;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="structbntvmodule" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbntvmodule" kindref="compound">bntvmodule</ref><sp/>{</highlight></codeline>
<codeline lineno="245" refid="structbntvmodule_1a3dde37be8ea45a6b88982b1efac3d210" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structbntvmodule_1a3dde37be8ea45a6b88982b1efac3d210" kindref="member">name</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="246" refid="structbntvmodule_1a687658078a7d84f2661bd5b5cd024a32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structbntvmodobj" kindref="compound">bntvmodobj</ref><sp/>*<ref refid="structbntvmodule_1a687658078a7d84f2661bd5b5cd024a32" kindref="member">attrs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="247" refid="structbntvmodule_1ad988c06052a10c1f3fc0002862aee7c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structbntvmodule_1ad988c06052a10c1f3fc0002862aee7c0" kindref="member">size</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="248" refid="structbntvmodule_1a307e7f6aecb900f345d8087da758e6dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bmodule<sp/>*<ref refid="structbntvmodule_1a307e7f6aecb900f345d8087da758e6dd" kindref="member">module</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="249"><highlight class="normal">}<sp/><ref refid="structbntvmodule" kindref="compound">bntvmodule</ref>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbclass" kindref="compound">bclass</ref>;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="berry_8h_1a7452d322aeb4e2ff71d24211f42461c3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbclass" kindref="compound">bclass</ref><sp/>*<ref refid="berry_8h_1a7452d322aeb4e2ff71d24211f42461c3" kindref="member">bclass_ptr</ref>;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="265" refid="berry_8h_1afb0da897cba255419c7e94606f7ccadf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structbclass" kindref="compound">bclass_ptr</ref><sp/><ref refid="berry_8h_1afb0da897cba255419c7e94606f7ccadf" kindref="member">bclass_array</ref>[];</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>native<sp/>module<sp/>node<sp/>definition<sp/>macro<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>be_native_module_nil(_name)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="270"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>.name<sp/>=<sp/>(_name),<sp/>.type<sp/>=<sp/>BE_CNIL,<sp/>.u.i<sp/>=<sp/>0<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>be_native_module_int(_name,<sp/>_v)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="273"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>.name<sp/>=<sp/>(_name),<sp/>.type<sp/>=<sp/>BE_CINT,<sp/>.u.i<sp/>=<sp/>(bint)(_v)<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>be_native_module_real(_name,<sp/>_v)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="276"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>.name<sp/>=<sp/>(_name),<sp/>.type<sp/>=<sp/>BE_CREAL,<sp/>.u.r<sp/>=<sp/>(breal)(_v)<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>be_native_module_bool(_name,<sp/>_b)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="279"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>.name<sp/>=<sp/>(_name),<sp/>.type<sp/>=<sp/>BE_CBOOL,<sp/>.u.b<sp/>=<sp/>(bbool)(_b)<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>be_native_module_function(_name,<sp/>_f)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="282"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>.name<sp/>=<sp/>(_name),<sp/>.type<sp/>=<sp/>BE_CFUNCTION,<sp/>.u.f<sp/>=<sp/>(_f)<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>be_native_module_str(_name,<sp/>_s)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="285"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>.name<sp/>=<sp/>(_name),<sp/>.type<sp/>=<sp/>BE_CSTRING,<sp/>.u.s<sp/>=<sp/>(_s)<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>be_native_module_module(_name,<sp/>_m)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="288"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>.name<sp/>=<sp/>(_name),<sp/>.type<sp/>=<sp/>BE_CMODULE,<sp/>.u.o<sp/>=<sp/>&amp;(_m)<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>be_native_module_nil(_name)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="291"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>bntvmodobj(_name)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>be_native_module_int(_name,<sp/>_v)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="294"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>bntvmodobj(_name,<sp/>bint(_v))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>be_native_module_real(_name,<sp/>_v)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="297"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>bntvmodobj(_name,<sp/>breal(_v))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>be_native_module_bool(_name,<sp/>_b)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="300"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>bntvmodobj(_name,<sp/>bbool(_b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>be_native_module_function(_name,<sp/>_f)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="303"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>bntvmodobj(_name,<sp/>_f)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>be_native_module_str(_name,<sp/>_s)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="306"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>bntvmodobj(_name,<sp/>_s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>be_native_module_module(_name,<sp/>_m)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="309"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>bntvmodobj(_name,<sp/>BE_CMODULE,<sp/>&amp;(_m))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>be_native_module_attr_table(name)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="313"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>const<sp/>bntvmodobj<sp/>name##_attrs[]<sp/>=</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>be_native_module(name)<sp/><sp/>be_native_module_##name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>be_native_class(name)<sp/><sp/>be_class_##name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="323" refid="berry_8h_1ad1bb75fa2986b83af90cfcfb7c2d9cf8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>be_extern_native_module(name)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="324"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>extern<sp/>const<sp/>bntvmodule<sp/>be_native_module(name)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="berry_8h_1a6566dc7069e29dd0f05ce4714cd56011" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>be_extern_native_class(name)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="332"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>extern<sp/>const<sp/>struct<sp/>bclass<sp/>be_native_class(name)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340" refid="berry_8h_1a888ec2f60f0c9fe870171051468e7168" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>be_define_native_module(_name,<sp/>_init)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="341"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>const<sp/>bntvmodule<sp/>be_native_module(_name)<sp/>=<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="342"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.name<sp/>=<sp/>#_name,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="343"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.attrs<sp/>=<sp/>_name##_attrs,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="344"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.size<sp/>=<sp/>sizeof(_name##_attrs)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="345"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>sizeof(_name##_attrs[0]),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="346"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.module<sp/>=<sp/>NULL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="347"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.init<sp/>=<sp/>_init<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="348"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>be_define_native_module(_name,<sp/>_init)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="351"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>const<sp/>bntvmodule<sp/>be_native_module(_name)<sp/>=<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="352"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#_name,<sp/>_name##_attrs,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="353"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeof(_name##_attrs)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="354"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>sizeof(_name##_attrs[0]),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="355"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>_init<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="356"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="365" refid="berry_8h_1a5f5b03e3ed794580f1348be57532e8ca" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>be_define_local_const_str(_name,<sp/>_s,<sp/>_hash,<sp/>_len)<sp/>\</highlight></codeline>
<codeline lineno="366"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>static<sp/>const<sp/>bcstring<sp/>be_local_const_str_##_name<sp/>=<sp/>{<sp/><sp/>\</highlight></codeline>
<codeline lineno="367"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.next<sp/>=<sp/>(bgcobject<sp/>*)NULL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="368"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.type<sp/>=<sp/>BE_STRING,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="369"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.marked<sp/>=<sp/>GC_CONST,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="370"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.extra<sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="371"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.slen<sp/>=<sp/>_len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="372"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hash<sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="373"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.s<sp/>=<sp/>_s<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="374"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="381" refid="berry_8h_1a5e05d016e1279f1da065a34874778702" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>be_nested_const_str(_s,<sp/>_hash,<sp/>_len)<sp/><sp/>\</highlight></codeline>
<codeline lineno="382"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(bstring*)<sp/>&amp;(const<sp/>bcstring)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="383"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.next<sp/>=<sp/>(bgcobject<sp/>*)NULL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="384"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.type<sp/>=<sp/>BE_STRING,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="385"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.marked<sp/>=<sp/>GC_CONST,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="386"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.extra<sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="387"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.slen<sp/>=<sp/>_len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="388"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hash<sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="389"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.s<sp/>=<sp/>_s<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="390"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>be_local_const_str(_name)<sp/>(bstring*)<sp/>&amp;be_local_const_str_##_name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="407" refid="berry_8h_1a3b35bc6e8b8bb678f4fc0c9db26aa395" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BE_IIF(cond)<sp/>BE_IIF_<sp/>##<sp/>cond</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BE_IIF_0(t,<sp/>f)<sp/>f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BE_IIF_1(t,<sp/>f)<sp/>t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BE_DEBUG_VAR_INFO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>be_local_const_upval(ins,<sp/>idx)<sp/>{<sp/>&quot;&quot;</highlight><highlight class="normal">,<sp/>ins,<sp/>idx<sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>be_local_const_upval(ins,<sp/>idx)<sp/>{<sp/>ins,<sp/>idx<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BE_DEBUG_RUNTIME_INFO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PROTO_RUNTIME_BLOCK<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="432"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>NULL,<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="433"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435" refid="berry_8h_1ae73754cb5fe9ed54fbcffec3d147a771" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PROTO_RUNTIME_BLOCK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>BE_DEBUG_VAR_INFO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PROTO_VAR_INFO_BLOCK<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="445"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>NULL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="446"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>PROTO_VAR_INFO_BLOCK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="456" refid="berry_8h_1a03d302fb234f4109c60e6141ea7bbca6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>be_define_local_proto(_name,<sp/>_nstack,<sp/>_argc,<sp/>_is_const,<sp/>_is_subproto,<sp/>_is_upval)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="457"><highlight class="preprocessor"><sp/><sp/>static<sp/>const<sp/>bproto<sp/>_name##_proto<sp/>=<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="458"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>NULL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="459"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>BE_PROTO,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="460"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>0x08,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="461"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(_nstack),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="462"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>BE_IIF(_is_upval)(sizeof(_name##_upvals)/sizeof(bupvaldesc),0),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="463"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(_argc),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="464"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="465"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>NULL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="466"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>BE_IIF(_is_upval)((bupvaldesc*)&amp;_name##_upvals,NULL),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="467"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>BE_IIF(_is_const)((bvalue*)&amp;_name##_ktab,NULL),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="468"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>BE_IIF(_is_subproto)((struct<sp/>bproto**)&amp;_name##_subproto,NULL),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="469"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(binstruction*)<sp/>&amp;_name##_code,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="470"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>be_local_const_str(_name##_str_name),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="471"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>sizeof(_name##_code)/sizeof(uint32_t),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="472"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>BE_IIF(_is_const)(sizeof(_name##_ktab)/sizeof(bvalue),0),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="473"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>BE_IIF(_is_subproto)(sizeof(_name##_subproto)/sizeof(bproto*),0),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="474"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>be_local_const_str(_name##_str_source),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="475"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>PROTO_RUNTIME_BLOCK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="476"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>PROTO_VAR_INFO_BLOCK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="477"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="484" refid="berry_8h_1ab03317a9514b52ba420f7ee5871982fc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>be_nested_proto(_nstack,<sp/>_argc,<sp/>_varg,<sp/>_has_upval,<sp/>_upvals,<sp/>_has_subproto,<sp/>_protos,<sp/>_has_const,<sp/>_ktab,<sp/>_fname,<sp/>_source,<sp/>_code)<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="485"><highlight class="preprocessor"><sp/><sp/>&amp;<sp/>(const<sp/>bproto)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="486"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>NULL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="487"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>BE_PROTO,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="488"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>0x08,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="489"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(_nstack),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="490"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>BE_IIF(_has_upval)(sizeof(*_upvals)/sizeof(bupvaldesc),0),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="491"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(_argc),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="492"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(_varg),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="493"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>NULL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="494"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(bupvaldesc*)<sp/>_upvals,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="495"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(bvalue*)<sp/>_ktab,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="496"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(struct<sp/>bproto**)<sp/>_protos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="497"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(binstruction*)<sp/>_code,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="498"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((bstring*)<sp/>_fname),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="499"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>sizeof(*_code)/sizeof(binstruction),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="500"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>BE_IIF(_has_const)(sizeof(*_ktab)/sizeof(bvalue),0),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="501"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>BE_IIF(_has_subproto)(sizeof(*_protos)/sizeof(bproto*),0),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="502"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((bstring*)<sp/>_source),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="503"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>PROTO_RUNTIME_BLOCK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="504"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>PROTO_VAR_INFO_BLOCK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="505"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>be_define_local_closure(_name)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="513"><highlight class="preprocessor"><sp/><sp/>const<sp/>bclosure<sp/>_name##_closure<sp/>=<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="514"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>NULL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="515"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>BE_CLOSURE,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="516"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GC_CONST,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="517"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="518"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>NULL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="519"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(bproto*)<sp/>&amp;_name##_proto,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="520"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>NULL<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="521"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="528" refid="berry_8h_1a3c061920384b37d5c59a85674a6b8a0e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>be_local_closure(_name,<sp/>_proto)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="529"><highlight class="preprocessor"><sp/><sp/>static<sp/>const<sp/>bclosure<sp/>_name##_closure<sp/>=<sp/>{<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="530"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>NULL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="531"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>BE_CLOSURE,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="532"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GC_CONST,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="533"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="534"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>NULL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="535"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(bproto*)<sp/>_proto,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="536"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/>NULL<sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="537"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="546" refid="berry_8h_1abcdc5d88126ee8af359442e9d9dfb263" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BE_HOOK_LINE<sp/><sp/><sp/><sp/>1<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BE_HOOK_CALL<sp/><sp/><sp/><sp/>2<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BE_HOOK_RET<sp/><sp/><sp/><sp/><sp/>4<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BE_HOOK_EXCEPT<sp/><sp/>8<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559" refid="structbhookinfo" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbhookinfo" kindref="compound">bhookinfo</ref><sp/>{</highlight></codeline>
<codeline lineno="560" refid="structbhookinfo_1a4785708ba3004bf512d1f822fd84659b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structbhookinfo_1a4785708ba3004bf512d1f822fd84659b" kindref="member">type</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="561" refid="structbhookinfo_1aa1a595b1c1a2431b2ff4433d4aa16fbb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structbhookinfo_1aa1a595b1c1a2431b2ff4433d4aa16fbb" kindref="member">line</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="562" refid="structbhookinfo_1a5bc48d7aebc938b0e7a9683aea25163f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structbhookinfo_1a5bc48d7aebc938b0e7a9683aea25163f" kindref="member">source</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="563" refid="structbhookinfo_1a309aaae4a5f815b4c97aab8660c89303" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structbhookinfo_1a309aaae4a5f815b4c97aab8660c89303" kindref="member">func_name</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="564" refid="structbhookinfo_1aeed0b12c0fdf48127b1028a5363806f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structbhookinfo_1aeed0b12c0fdf48127b1028a5363806f6" kindref="member">data</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="565"><highlight class="normal">}<sp/><ref refid="structbhookinfo" kindref="compound">bhookinfo</ref>;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*bntvhook)(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/><ref refid="structbhookinfo" kindref="compound">bhookinfo</ref><sp/>*info);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!BE_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(be_assert)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>be_assert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585" refid="berry_8h_1aa8f37fe0b3f4007507cba855543becda" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>be_assert(expr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((void)0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*bobshook)(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>event,<sp/>...);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="602" refid="berry_8h_1a6be1d974c5767579c9c3986e81c9812b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a6be1d974c5767579c9c3986e81c9812b" kindref="member">beobshookevents</ref><sp/>{</highlight></codeline>
<codeline lineno="603" refid="berry_8h_1a6be1d974c5767579c9c3986e81c9812badbf77384b1709aa3ff2803223d4d3a86" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="berry_8h_1a6be1d974c5767579c9c3986e81c9812badbf77384b1709aa3ff2803223d4d3a86" kindref="member">BE_OBS_PCALL_ERROR</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="604" refid="berry_8h_1a6be1d974c5767579c9c3986e81c9812ba7a5aa785ce036ef6995b6a13ac6e0cf0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="berry_8h_1a6be1d974c5767579c9c3986e81c9812ba7a5aa785ce036ef6995b6a13ac6e0cf0" kindref="member">BE_OBS_GC_START</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="605" refid="berry_8h_1a6be1d974c5767579c9c3986e81c9812ba01893a61e8ec11f7ecdf8ba17a8af466" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="berry_8h_1a6be1d974c5767579c9c3986e81c9812ba01893a61e8ec11f7ecdf8ba17a8af466" kindref="member">BE_OBS_GC_END</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="606" refid="berry_8h_1a6be1d974c5767579c9c3986e81c9812ba1bdedea6e4aff926dd0ec113fd2a3b6f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="berry_8h_1a6be1d974c5767579c9c3986e81c9812ba1bdedea6e4aff926dd0ec113fd2a3b6f" kindref="member">BE_OBS_VM_HEARTBEAT</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="607" refid="berry_8h_1a6be1d974c5767579c9c3986e81c9812ba9f60120c4e657fda61a5078d30139ab6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="berry_8h_1a6be1d974c5767579c9c3986e81c9812ba9f60120c4e657fda61a5078d30139ab6" kindref="member">BE_OBS_STACK_RESIZE_START</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="608"><highlight class="normal">};</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*bctypefunc)(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="626" refid="berry_8h_1aad94e7ed246851a8e37d780062967d23" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>be_writestring(s)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>be_writebuffer((s),<sp/>strlen(s))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="634" refid="berry_8h_1af0671b49053b387f81618311cd8c1642" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>be_writenewline()<sp/><sp/><sp/><sp/><sp/><sp/><sp/>be_writebuffer(&quot;\n&quot;</highlight><highlight class="normal">,<sp/>1)</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="643" refid="berry_8h_1a2bfb4e4119f60c4814e4b6009d475285" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>be_return(vm)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>be_returnvalue(vm)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="652" refid="berry_8h_1afc724329ef4805a66e5fab8382f80fba" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>be_return_nil(vm)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>be_returnnilvalue(vm)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="662" refid="berry_8h_1a8a9882d99eefd2ec5f4b3ea2156ecc9a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>be_loadfile(vm,<sp/>name)<sp/><sp/><sp/>be_loadmode((vm),<sp/>(name),<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="673" refid="berry_8h_1a18e32c800312285ff59d34aa7ad9be28" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>be_loadmodule(vm,<sp/>name)<sp/>be_loadmode((vm),<sp/>(name),<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="684" refid="berry_8h_1a4bdadd5fffe12ffca2e3c4add2a80859" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>be_loadstring(vm,<sp/>str)<sp/>\</highlight></codeline>
<codeline lineno="685"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>be_loadbuffer((vm),<sp/>&quot;string&quot;</highlight><highlight class="normal">,<sp/>(str),<sp/>strlen(str))</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="696" refid="berry_8h_1afb8f309ea0341f059acfefdedadcadb8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>be_dostring(vm,<sp/>s)<sp/>\</highlight></codeline>
<codeline lineno="697"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(be_loadstring((vm),<sp/>(s))<sp/>||<sp/>be_pcall((vm),<sp/>0))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="708" refid="berry_8h_1a7fdb31b8c6c01e0f1b7fd40ce145aad6" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/>bint<sp/><ref refid="berry_8h_1a7fdb31b8c6c01e0f1b7fd40ce145aad6" kindref="member">be_str2int</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**endstr);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="719" refid="berry_8h_1a784f97a4856b455161d6350d06d9743a" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/>breal<sp/><ref refid="berry_8h_1a784f97a4856b455161d6350d06d9743a" kindref="member">be_str2real</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**endstr);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>be_str2num(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="744" refid="berry_8h_1a980cab8052a03285bd64e3f03d43960d" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a980cab8052a03285bd64e3f03d43960d" kindref="member">be_top</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>be_typename(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>be_classname(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="783" refid="berry_8h_1a559ea7517e8fc4cf06c7b0ec16ecacbe" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1a559ea7517e8fc4cf06c7b0ec16ecacbe" kindref="member">be_classof</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="801" refid="berry_8h_1a9ce5897ac8585a54890a306731dcf0c5" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a9ce5897ac8585a54890a306731dcf0c5" kindref="member">be_strlen</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="814" refid="berry_8h_1a3d355a233b3bb1214e56f6bd02fd7ad9" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a3d355a233b3bb1214e56f6bd02fd7ad9" kindref="member">be_strconcat</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="826" refid="berry_8h_1a7b8464c69c27b4fa98ef1d9d2024179e" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a7b8464c69c27b4fa98ef1d9d2024179e" kindref="member">be_pop</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="840" refid="berry_8h_1a2cf27785508356ae22912599efe28b1d" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a2cf27785508356ae22912599efe28b1d" kindref="member">be_remove</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="855" refid="berry_8h_1a11bf1898be3502f233341a717f882e77" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a11bf1898be3502f233341a717f882e77" kindref="member">be_absindex</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="869" refid="berry_8h_1a488a00140d566bf997bb16a966d5f3bc" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1a488a00140d566bf997bb16a966d5f3bc" kindref="member">be_isnil</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="883" refid="berry_8h_1a336f9e370286efb20bac2daa5e2cc6a3" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1a336f9e370286efb20bac2daa5e2cc6a3" kindref="member">be_isbool</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="897" refid="berry_8h_1a23045d026dab4ed2db48b9fefdd1feb5" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1a23045d026dab4ed2db48b9fefdd1feb5" kindref="member">be_isint</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="911" refid="berry_8h_1a9f29487d9bc4fbfb908cf7f566403c4b" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1a9f29487d9bc4fbfb908cf7f566403c4b" kindref="member">be_isreal</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="925" refid="berry_8h_1a725950b95c4022ac7d40ddd4326100fb" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1a725950b95c4022ac7d40ddd4326100fb" kindref="member">be_isnumber</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="939" refid="berry_8h_1a627df098cc9e9b49d154208527480acb" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1a627df098cc9e9b49d154208527480acb" kindref="member">be_isstring</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="953" refid="berry_8h_1ae05ec465c01f2249cb9cb2f300fd6b6b" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1ae05ec465c01f2249cb9cb2f300fd6b6b" kindref="member">be_isclosure</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="967" refid="berry_8h_1a1c1a66270c7ab652439cd3ef90b45078" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1a1c1a66270c7ab652439cd3ef90b45078" kindref="member">be_isntvclos</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="981" refid="berry_8h_1a1c374902ffc2dc729e414d149928402c" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1a1c374902ffc2dc729e414d149928402c" kindref="member">be_isfunction</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="995" refid="berry_8h_1ab62ce089f53d70bb6bc82168fa9173c3" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1ab62ce089f53d70bb6bc82168fa9173c3" kindref="member">be_isproto</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="1009" refid="berry_8h_1aedcab9a25b748c7739751c374f1aca30" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1aedcab9a25b748c7739751c374f1aca30" kindref="member">be_isclass</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023" refid="berry_8h_1a06bed8ce372403ca8475693475256966" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1a06bed8ce372403ca8475693475256966" kindref="member">be_isinstance</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037" refid="berry_8h_1a7909568de07bd564210c9456cd2622a1" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1a7909568de07bd564210c9456cd2622a1" kindref="member">be_ismodule</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051" refid="berry_8h_1a89d04d39713dfd90d1a6d30f02499809" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1a89d04d39713dfd90d1a6d30f02499809" kindref="member">be_islist</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065" refid="berry_8h_1a724d6151dc01d227566d27716e418e3b" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1a724d6151dc01d227566d27716e418e3b" kindref="member">be_ismap</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1079" refid="berry_8h_1ae2a0515e8ef277b55a50b5885029264f" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1ae2a0515e8ef277b55a50b5885029264f" kindref="member">be_iscomptr</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight></codeline>
<codeline lineno="1090" refid="berry_8h_1a9f6ef9366b631d22b1fec9f7762e4cfe" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1a9f6ef9366b631d22b1fec9f7762e4cfe" kindref="member">be_iscomobj</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight></codeline>
<codeline lineno="1101" refid="berry_8h_1a88efd5a661ef0832ba98d8a3cdb00670" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1a88efd5a661ef0832ba98d8a3cdb00670" kindref="member">be_isderived</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight></codeline>
<codeline lineno="1115" refid="berry_8h_1a5ba1f97b90d6e6190dce3bf4305e326f" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1a5ba1f97b90d6e6190dce3bf4305e326f" kindref="member">be_isbytes</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130" refid="berry_8h_1a5fe73bf8f5c4d76ad6a38c7c3fe1b87d" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/>bint<sp/><ref refid="berry_8h_1a5fe73bf8f5c4d76ad6a38c7c3fe1b87d" kindref="member">be_toint</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight></codeline>
<codeline lineno="1144" refid="berry_8h_1a9fbad5a2e71b5c4b1590c8ceaa3390d1" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/>breal<sp/><ref refid="berry_8h_1a9fbad5a2e71b5c4b1590c8ceaa3390d1" kindref="member">be_toreal</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight></codeline>
<codeline lineno="1159" refid="berry_8h_1adff008961a65207378344a1299295b57" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1adff008961a65207378344a1299295b57" kindref="member">be_toindex</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175" refid="berry_8h_1ac6050b4584f3711bd510f073c9293e95" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1ac6050b4584f3711bd510f073c9293e95" kindref="member">be_tobool</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>be_tostring(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>be_toescape(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode);</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>be_tocomptr(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight></codeline>
<codeline lineno="1228" refid="berry_8h_1a4ac3786fafe0cbb1e79190697003039d" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a4ac3786fafe0cbb1e79190697003039d" kindref="member">be_moveto</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>from,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>to);</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1238" refid="berry_8h_1ae4d8241b8ee8aabdea31a70214cf901a" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1ae4d8241b8ee8aabdea31a70214cf901a" kindref="member">be_pushnil</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm);</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight></codeline>
<codeline lineno="1252" refid="berry_8h_1a430ec99531afb60bc16d904ad38db0d9" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a430ec99531afb60bc16d904ad38db0d9" kindref="member">be_pushbool</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight></codeline>
<codeline lineno="1262" refid="berry_8h_1a9e63236d48efd3f1d9c8eabf91d3a49d" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a9e63236d48efd3f1d9c8eabf91d3a49d" kindref="member">be_pushint</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/>bint<sp/>i);</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight></codeline>
<codeline lineno="1272" refid="berry_8h_1a27a65393db4b141eec8ac0356edbac33" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a27a65393db4b141eec8ac0356edbac33" kindref="member">be_pushreal</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/>breal<sp/>r);</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight></codeline>
<codeline lineno="1286" refid="berry_8h_1af5167d9a490d876c641b77cfc12b520d" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1af5167d9a490d876c641b77cfc12b520d" kindref="member">be_pushstring</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight></codeline>
<codeline lineno="1301" refid="berry_8h_1a1a071289afb6da0fad98cc451fedaa1a" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a1a071289afb6da0fad98cc451fedaa1a" kindref="member">be_pushnstring</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>be_pushfstring(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*format,<sp/>...);</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>be_pushbuffer(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight></codeline>
<codeline lineno="1339" refid="berry_8h_1a262e3dc79a2bbcbe72cc90c3e0b457db" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a262e3dc79a2bbcbe72cc90c3e0b457db" kindref="member">be_pushvalue</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight></codeline>
<codeline lineno="1349" refid="berry_8h_1a9a970ce282202adf4db048d161819f11" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a9a970ce282202adf4db048d161819f11" kindref="member">be_pushclosure</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*cl);</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight></codeline>
<codeline lineno="1364" refid="berry_8h_1ab8c8bb159c49602c1f3ec2a8752374bb" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1ab8c8bb159c49602c1f3ec2a8752374bb" kindref="member">be_pushntvclosure</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/>bntvfunc<sp/>f,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nupvals);</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight></codeline>
<codeline lineno="1374" refid="berry_8h_1aec99ce1feb2c3256dc054d9b9190f63d" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1aec99ce1feb2c3256dc054d9b9190f63d" kindref="member">be_pushntvfunction</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/>bntvfunc<sp/>f);</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight></codeline>
<codeline lineno="1388" refid="berry_8h_1a643e28bb9202c7e07b1f6c6780614b97" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a643e28bb9202c7e07b1f6c6780614b97" kindref="member">be_pushclass</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structbnfuncinfo" kindref="compound">bnfuncinfo</ref><sp/>*lib);</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"></highlight></codeline>
<codeline lineno="1398" refid="berry_8h_1ad35b0693226ebee04aed4572865b0fc1" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1ad35b0693226ebee04aed4572865b0fc1" kindref="member">be_pushntvclass</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbclass" kindref="compound">bclass</ref><sp/>*c);</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"></highlight></codeline>
<codeline lineno="1413" refid="berry_8h_1a9c257958f5e43debf47008b80f972d60" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a9c257958f5e43debf47008b80f972d60" kindref="member">be_pushcomptr</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr);</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"></highlight></codeline>
<codeline lineno="1424" refid="berry_8h_1a72c9b1a4d8d9d25e1f13c9293685313e" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1a72c9b1a4d8d9d25e1f13c9293685313e" kindref="member">be_pushiter</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight></codeline>
<codeline lineno="1436" refid="berry_8h_1a3cfabff41e89970ac97f864e90f25bc0" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a3cfabff41e89970ac97f864e90f25bc0" kindref="member">be_newlist</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm);</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"></highlight></codeline>
<codeline lineno="1448" refid="berry_8h_1a00c377d496271c73103a69e554b00856" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a00c377d496271c73103a69e554b00856" kindref="member">be_newmap</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm);</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"></highlight></codeline>
<codeline lineno="1457" refid="berry_8h_1a2becc2ba1ffdacea07a2c22446a8b970" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a2becc2ba1ffdacea07a2c22446a8b970" kindref="member">be_newmodule</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm);</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"></highlight></codeline>
<codeline lineno="1468" refid="berry_8h_1aa204bb0762c912b9b34833d4a8f51e25" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1aa204bb0762c912b9b34833d4a8f51e25" kindref="member">be_newcomobj</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/>bntvfunc<sp/>destroy);</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight></codeline>
<codeline lineno="1478" refid="berry_8h_1a1102f2f696392904b6e7e6b0945e2e86" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a1102f2f696392904b6e7e6b0945e2e86" kindref="member">be_newobject</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"></highlight></codeline>
<codeline lineno="1489" refid="berry_8h_1a27221293c05b4bc215e49e5730c2e7e3" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1a27221293c05b4bc215e49e5730c2e7e3" kindref="member">be_copy</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"></highlight></codeline>
<codeline lineno="1501" refid="berry_8h_1adb1a7ead69966ce464f119a26a4c4395" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1adb1a7ead69966ce464f119a26a4c4395" kindref="member">be_setname</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight></codeline>
<codeline lineno="1514" refid="berry_8h_1a46947d32e731a5b740a906da7200ac2f" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1a46947d32e731a5b740a906da7200ac2f" kindref="member">be_getglobal</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"></highlight></codeline>
<codeline lineno="1524" refid="berry_8h_1a33e13144a4aa027883b7c41bff99b570" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a33e13144a4aa027883b7c41bff99b570" kindref="member">be_setglobal</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight></codeline>
<codeline lineno="1535" refid="berry_8h_1ae13c1fea2e1a3fd6c1ba92c60accbd46" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1ae13c1fea2e1a3fd6c1ba92c60accbd46" kindref="member">be_getbuiltin</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight></codeline>
<codeline lineno="1550" refid="berry_8h_1ad94da7053ced75d4b5292517804a5e5c" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1ad94da7053ced75d4b5292517804a5e5c" kindref="member">be_setmember</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*k);</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"></highlight></codeline>
<codeline lineno="1564" refid="berry_8h_1a73243880ed94d6e7d4c6674122965137" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1a73243880ed94d6e7d4c6674122965137" kindref="member">be_getmember</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*k);</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"></highlight></codeline>
<codeline lineno="1576" refid="berry_8h_1abed8815fe2236e251f29cafc666befa4" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1abed8815fe2236e251f29cafc666befa4" kindref="member">be_getmethod</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*k);</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"></highlight></codeline>
<codeline lineno="1592" refid="berry_8h_1abb7d9cbd04edf59754007057374e9491" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1abb7d9cbd04edf59754007057374e9491" kindref="member">be_getindex</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"></highlight></codeline>
<codeline lineno="1608" refid="berry_8h_1a7ae7e74d7e3cd87dbfb7f539a9d0dfa9" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1a7ae7e74d7e3cd87dbfb7f539a9d0dfa9" kindref="member">be_setindex</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"></highlight></codeline>
<codeline lineno="1621" refid="berry_8h_1a1e11add0158c7ac14ac6553269524d09" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a1e11add0158c7ac14ac6553269524d09" kindref="member">be_getupval</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos);</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"></highlight></codeline>
<codeline lineno="1636" refid="berry_8h_1a5fb668650de868a7ca945b11968848e2" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1a5fb668650de868a7ca945b11968848e2" kindref="member">be_setupval</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos);</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"></highlight></codeline>
<codeline lineno="1647" refid="berry_8h_1ab6f432d08eeb75812c7ca6080a0e9ab6" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1ab6f432d08eeb75812c7ca6080a0e9ab6" kindref="member">be_setsuper</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"></highlight></codeline>
<codeline lineno="1662" refid="berry_8h_1a6313c2ba1133b47e560b2b35edef69ea" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a6313c2ba1133b47e560b2b35edef69ea" kindref="member">be_getsuper</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"></highlight></codeline>
<codeline lineno="1676" refid="berry_8h_1af484946347539b59ef8482cd04529c26" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1af484946347539b59ef8482cd04529c26" kindref="member">be_data_size</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"></highlight></codeline>
<codeline lineno="1690" refid="berry_8h_1a5a1d36f873d7fe5cf69c7387f37b02c5" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a5a1d36f873d7fe5cf69c7387f37b02c5" kindref="member">be_data_push</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"></highlight></codeline>
<codeline lineno="1708" refid="berry_8h_1afac5fce83aae7f5781b9ebe3c527c3d9" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1afac5fce83aae7f5781b9ebe3c527c3d9" kindref="member">be_data_insert</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"></highlight></codeline>
<codeline lineno="1726" refid="berry_8h_1a1aea7d810646e6bd331932b0713a90e5" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1a1aea7d810646e6bd331932b0713a90e5" kindref="member">be_data_remove</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"></highlight></codeline>
<codeline lineno="1737" refid="berry_8h_1a59b2bf6d7f0aeca04b6215afab0c4b4a" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1a59b2bf6d7f0aeca04b6215afab0c4b4a" kindref="member">be_data_merge</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"></highlight></codeline>
<codeline lineno="1749" refid="berry_8h_1a756d04be68d93c4513263dd489c7a5a6" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a756d04be68d93c4513263dd489c7a5a6" kindref="member">be_data_resize</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"></highlight></codeline>
<codeline lineno="1759" refid="berry_8h_1a286250770a639230ac08f12d24ec0de9" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a286250770a639230ac08f12d24ec0de9" kindref="member">be_data_reverse</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"></highlight></codeline>
<codeline lineno="1777" refid="berry_8h_1a68a7a4397038079c02832c0820992e7f" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a68a7a4397038079c02832c0820992e7f" kindref="member">be_iter_next</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"></highlight></codeline>
<codeline lineno="1791" refid="berry_8h_1a9a110fa9da91be0c94ad5baa4e8a3f0b" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1a9a110fa9da91be0c94ad5baa4e8a3f0b" kindref="member">be_iter_hasnext</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"></highlight></codeline>
<codeline lineno="1808" refid="berry_8h_1a326e33d00c6480f551c5c8d0b5ee1c49" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1a326e33d00c6480f551c5c8d0b5ee1c49" kindref="member">be_refcontains</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"></highlight></codeline>
<codeline lineno="1820" refid="berry_8h_1ad55bb9a14a97dce0c99054041ad0c860" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1ad55bb9a14a97dce0c99054041ad0c860" kindref="member">be_refpush</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"></highlight></codeline>
<codeline lineno="1831" refid="berry_8h_1a8008f1a88b0c1e61988d6f7ada696169" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a8008f1a88b0c1e61988d6f7ada696169" kindref="member">be_refpop</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm);</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"></highlight></codeline>
<codeline lineno="1844" refid="berry_8h_1a5daca17dbf6cd5389047364e6f092bee" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a5daca17dbf6cd5389047364e6f092bee" kindref="member">be_stack_require</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count);</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"></highlight></codeline>
<codeline lineno="1855" refid="berry_8h_1a05569afc51815c4d7f6909675557556a" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1a05569afc51815c4d7f6909675557556a" kindref="member">be_getmodule</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*k);</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"></highlight></codeline>
<codeline lineno="1865" refid="berry_8h_1a34baf250c6397ee37bca3c8a90e413f9" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1a34baf250c6397ee37bca3c8a90e413f9" kindref="member">be_iseq</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm);</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"></highlight></codeline>
<codeline lineno="1875" refid="berry_8h_1a9811056d6683e3404b6b25f501c56840" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1a9811056d6683e3404b6b25f501c56840" kindref="member">be_isneq</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm);</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"></highlight></codeline>
<codeline lineno="1885" refid="berry_8h_1a5bf04bc6689493cb077eb1f4d0efbbb0" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1a5bf04bc6689493cb077eb1f4d0efbbb0" kindref="member">be_islt</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm);</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"></highlight></codeline>
<codeline lineno="1895" refid="berry_8h_1a2ce9751f25d94b607aae92c751eff967" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1a2ce9751f25d94b607aae92c751eff967" kindref="member">be_isle</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm);</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"></highlight></codeline>
<codeline lineno="1905" refid="berry_8h_1aa87eb547c9922371a5a68fdbe015df95" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1aa87eb547c9922371a5a68fdbe015df95" kindref="member">be_isgt</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm);</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"></highlight></codeline>
<codeline lineno="1915" refid="berry_8h_1a19a3fed68a82a5f3c139475f272269b4" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/><ref refid="berry_8h_1a19a3fed68a82a5f3c139475f272269b4" kindref="member">be_isge</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm);</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"></highlight></codeline>
<codeline lineno="1925" refid="berry_8h_1a657069bddbc8eba1faec45adf933b6a8" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a657069bddbc8eba1faec45adf933b6a8" kindref="member">be_returnvalue</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm);</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"></highlight></codeline>
<codeline lineno="1935" refid="berry_8h_1a441cd6a5ce904d027345d61fa593cf36" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a441cd6a5ce904d027345d61fa593cf36" kindref="member">be_returnnilvalue</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm);</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"></highlight></codeline>
<codeline lineno="1945" refid="berry_8h_1a89b32cce1f7bdd732b939c78baaa22c3" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a89b32cce1f7bdd732b939c78baaa22c3" kindref="member">be_call</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc);</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"></highlight></codeline>
<codeline lineno="1956" refid="berry_8h_1a2be32ea14c07e301c85510e6a7e2c3b5" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a2be32ea14c07e301c85510e6a7e2c3b5" kindref="member">be_pcall</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc);</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"></highlight></codeline>
<codeline lineno="1966" refid="berry_8h_1a3a134306e7712bcb35f107dfa13e44f5" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a3a134306e7712bcb35f107dfa13e44f5" kindref="member">be_exit</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status);</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"></highlight></codeline>
<codeline lineno="1977" refid="berry_8h_1a5f917fe30e568317ff655ab67c87f6d0" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a5f917fe30e568317ff655ab67c87f6d0" kindref="member">be_raise</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*except,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg);</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"></highlight></codeline>
<codeline lineno="1988" refid="berry_8h_1a904b8221651e0150bd1645a12f330c94" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a904b8221651e0150bd1645a12f330c94" kindref="member">be_getexcept</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>code);</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"></highlight></codeline>
<codeline lineno="1998" refid="berry_8h_1a253a84d125567a450ddf3732e537b394" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a253a84d125567a450ddf3732e537b394" kindref="member">be_dumpvalue</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"></highlight></codeline>
<codeline lineno="2007" refid="berry_8h_1a87f00d8286e340360b3c564fa6c96a06" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a87f00d8286e340360b3c564fa6c96a06" kindref="member">be_dumpexcept</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm);</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"></highlight></codeline>
<codeline lineno="2016" refid="berry_8h_1a5a530376546332770db9973beb174050" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a5a530376546332770db9973beb174050" kindref="member">be_stop_iteration</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm);</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"></highlight></codeline>
<codeline lineno="2032" refid="berry_8h_1a85a8212877e074c6a3fdec604eef5c7f" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a85a8212877e074c6a3fdec604eef5c7f" kindref="member">be_regfunc</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/>bntvfunc<sp/>f);</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"></highlight></codeline>
<codeline lineno="2043" refid="berry_8h_1aa6328e3b23c451178acbd26434badf86" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1aa6328e3b23c451178acbd26434badf86" kindref="member">be_regclass</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structbnfuncinfo" kindref="compound">bnfuncinfo</ref><sp/>*lib);</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"></highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/><ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref>*<sp/>be_vm_new(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"></highlight></codeline>
<codeline lineno="2061" refid="berry_8h_1ab351e7affe3deeff456b59e951350d12" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1ab351e7affe3deeff456b59e951350d12" kindref="member">be_vm_delete</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm);</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"></highlight></codeline>
<codeline lineno="2071" refid="berry_8h_1af963b04a6ee2b417c5340c1c20bbac73" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1af963b04a6ee2b417c5340c1c20bbac73" kindref="member">be_set_obs_hook</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/>bobshook<sp/>hook);</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"></highlight></codeline>
<codeline lineno="2081" refid="berry_8h_1a10d4c884e8499d9fa43e9a77f6d41ba0" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a10d4c884e8499d9fa43e9a77f6d41ba0" kindref="member">be_set_ctype_func_hanlder</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/>bctypefunc<sp/>handler);</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"></highlight></codeline>
<codeline lineno="2091" refid="berry_8h_1aab39998d8b2d5edd01b8f95300003841" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/>bctypefunc<sp/><ref refid="berry_8h_1aab39998d8b2d5edd01b8f95300003841" kindref="member">be_get_ctype_func_hanlder</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm);</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"></highlight></codeline>
<codeline lineno="2109" refid="berry_8h_1a2778739fa0b08bc81e566772fe5ad78f" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a2778739fa0b08bc81e566772fe5ad78f" kindref="member">be_loadbuffer</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"></highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>be_loadmode(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/><ref refid="berry_8h_1a483536941d791ea930e4ec204c87a4f6" kindref="member">bbool</ref><sp/>islocal);</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"></highlight></codeline>
<codeline lineno="2132" refid="berry_8h_1ac84c74454daa7f452fb8fe0b21e74056" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1ac84c74454daa7f452fb8fe0b21e74056" kindref="member">be_loadlib</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path);</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"></highlight></codeline>
<codeline lineno="2143" refid="berry_8h_1a4fc13455b23aa4e2de6d55b03f22e969" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a4fc13455b23aa4e2de6d55b03f22e969" kindref="member">be_savecode</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"></highlight></codeline>
<codeline lineno="2152" refid="berry_8h_1a072f72b511b16d5fcdc4669541d25a54" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a072f72b511b16d5fcdc4669541d25a54" kindref="member">be_module_path</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm);</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"></highlight></codeline>
<codeline lineno="2162" refid="berry_8h_1a7159bcb33f73e6dc798fec6d184ef97c" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a7159bcb33f73e6dc798fec6d184ef97c" kindref="member">be_module_path_set</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path);</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"></highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>be_pushbytes(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"></highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>be_tobytes(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*len);</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"></highlight></codeline>
<codeline lineno="2198" refid="berry_8h_1a5151876ed2f05c21b353eaff0b3b11bd" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1a5151876ed2f05c21b353eaff0b3b11bd" kindref="member">be_sethook</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mask);</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"></highlight></codeline>
<codeline lineno="2210" refid="berry_8h_1ad63293b5a49c644118ccac701c7ac67e" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1ad63293b5a49c644118ccac701c7ac67e" kindref="member">be_setntvhook</ref>(<ref refid="berry_8h_1ad935f181a735187f016dca36d942edb2" kindref="member">bvm</ref><sp/>*vm,<sp/>bntvhook<sp/>hook,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mask);</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"></highlight></codeline>
<codeline lineno="2226" refid="berry_8h_1ae0e72ac28fef5610f98fa67fbb03b645" refkind="member"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="berry_8h_1ae0e72ac28fef5610f98fa67fbb03b645" kindref="member">be_writebuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"></highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><ref refid="berry_8h_1a6c2ec17e9c6c45f4e8345bc314656a19" kindref="member">BERRY_API</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>be_readstring(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"></highlight></codeline>
<codeline lineno="2254"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2257"><highlight class="normal"></highlight></codeline>
<codeline lineno="2258"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/var/tmp/BERRY/berry/src/berry.h"/>
  </compounddef>
</doxygen>
